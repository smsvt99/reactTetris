{"version":3,"sources":["Square/Square.js","GameOver/GameOver.js","Form/Form.js","ScoreBoard/ScoreBoard.js","Display/Display.js","App.js","serviceWorker.js","index.js"],"names":["Square","props","getSize","key","style","backgroundColor","getColor","colorKey","height","sizeKey","width","react_default","a","createElement","color","opacity","divStyle","marginBlockStart","marginBlockEnd","fontSize","textAlign","position","top","left","border","borderRadius","paddingTop","GameOver","gameOver","showScores","score","inputStyle","buttonStyle","cursor","Form","state","message","clickHandle","handleClick","_this","setState","render","type","maxLength","onChange","e","handleChange","value","nameValue","onClick","Component","rankStyle","display","marginRight","marginLeft","kingRank","nameStyle","maxWidth","marginBottom","marginTop","scoreStyle","tableStyle","margin","containerStyle","flexDirection","justifyContent","alignItems","columnStyle","padding","alignContent","boardStyle","flexWrap","titleStyle","linkStyle","kingColumnStyle","row","imgLeft","imgRight","ScoreBoard","makeRow","num","i","src_Square_Square","savedStates","board","makeTimeWarpRow","index","previousBoards","makeCard","rank","crown","name","src","href","Display","id","gravitySpeed","start","stop","endGame","App","currentPiece","currentPieceName","currentColor","gameBegun","stopped","rotation","timeWarpIndex","keyRouter","moveLeft","moveRight","moveDown","rotate","window","addEventListener","controlGravity","getRandomPiece","removeEventListener","random","Math","floor","generatePiece","shapeName","clearMs","checkForFullRows","checkForGameOver","boardCopy","map","slice","length","trackBoard","gravity","allowed","checkForFloor","checkForBlocksBeneath","currentPieceCopy","piece","command","gravityTimeout","setTimeout","clearTimeout","console","log","checkForBlocksRight","checkForBlocksLeft","j","includes","replace","topRow","rotationCopy","rotationAllowed","hypotheticalPiece","wontHitWalls","wontHitBlocks","newSpeed","fullRowArray","push","colorFullRow","array","shiftBlocksDown","k","submitCheck","fetch","method","headers","Accept","Content-Type","then","response","json","isHighestScore","trimTo1000AndSubmit","isHighScore","trimAndSubmit","scoreState","controlTimeWarp","highScore","submit","thousandIndices","body","JSON","stringify","getScores","target","previousBoardsCopy","moveTimeWarpIndex","plusOne","interval","setInterval","clearInterval","src_ScoreBoard_ScoreBoard","this","src_GameOver_GameOver","src_Form_Form","src_Display_Display","Boolean","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"yNAsCeA,SApCA,SAACC,GAed,SAASC,EAAQC,GACf,MAAY,UAARA,EACK,MAEA,OAIZ,IAAIC,EAAQ,CACTC,gBAvBA,SAAkBF,GACpB,OAAOA,EAAI,IACD,IAAK,IAAM,MAAO,OAClB,IAAK,IAAM,MAAO,SACrB,IAAK,IAAM,MAAO,OAClB,IAAK,IAAM,MAAO,MAClB,IAAK,IAAM,MAAO,QACf,IAAK,IAAM,MAAO,SAClB,IAAK,IAAM,MAAO,SAClB,IAAK,IAAM,MAAO,SAClB,IAAK,IAAM,MAAO,QAClB,QAAU,MAAO,QAYRG,CAASL,EAAMM,UAChCC,OAAQN,EAAQD,EAAMQ,SACtBC,MAAOR,EAAQD,EAAMQ,UAIvB,OACEE,EAAAC,EAAAC,cAAA,MAAIT,MAAOA,MC/BTA,EAAQ,CACVU,MAAO,QACPC,QAAS,KAELC,EAAW,CACfC,iBAAkB,OAClBC,eAAgB,OAChBb,gBAAiB,iBACjBS,MAAO,QACPK,SAAU,OACVT,MAAM,MACNF,OAAO,OACPY,UAAW,SAEXC,SAAU,WACVC,IAAK,KACLC,KAAM,OACNC,OAAQ,kBACRC,aAAc,OACdC,WAAY,MAoBDC,EAjBE,SAAC1B,GAYd,OAVIA,EAAM2B,WAAa3B,EAAM4B,WACflB,EAAAC,EAAAC,cAAA,OAAKT,MAAOY,GACtBL,EAAAC,EAAAC,cAAA,MAAIT,MAAOA,GAAX,aACAO,EAAAC,EAAAC,cAAA,0BAAkBZ,EAAM6B,OACxBnB,EAAAC,EAAAC,cAAA,8BAIU,MChCZT,EAAS,CACXgB,UAAW,SACXC,SAAU,WACVX,MAAO,MACPa,KAAM,MACND,IAAK,QAEHS,EAAa,CACfP,OAAS,kBACTnB,gBAAkB,iBAClBG,OAAQ,OACRE,MAAO,QACPI,MAAO,QACPK,SAAU,OACVM,aAAc,MACdL,UAAW,UAETY,EAAc,CAChBxB,OAAQ,OACRE,MAAO,QAEPS,SAAU,OACVM,aAAc,MACdQ,OAAQ,UACRT,OAAQ,mBA6BGU,6MAvBXC,MAAQ,CACJC,QAAU,YAGdC,YAAc,SAACpC,GACXA,EAAMqC,cACNC,EAAKC,SAAS,CAACJ,QAAS,mBAG5BK,OAAS,SAACxC,GACN,OAAIsC,EAAKtC,MAAM2B,UAAYW,EAAKtC,MAAM4B,WAElClB,EAAAC,EAAAC,cAAA,OAAKT,MAAOA,GACRO,EAAAC,EAAAC,cAAA,SAAOT,MAAO2B,EAAYW,KAAK,OAAOC,UAAU,KAAKC,SAAU,SAACC,GAAD,OAAON,EAAKtC,MAAM6C,aAAaD,IAAIE,MAAOR,EAAKtC,MAAM+C,YACpHrC,EAAAC,EAAAC,cAAA,UAAQT,MAAO4B,EAAaiB,QAAS,WAAKV,EAAKF,YAAYE,EAAKtC,SAAUsC,EAAKJ,MAAMC,UAIlF,mCAnBAc,aC5BbC,EAAY,CACdC,QAAS,SACTjC,SAAU,OACVkC,YAAa,OACbC,WAAY,OACZlC,UAAW,UAETmC,EAAY,CACdH,QAAS,SACTjC,SAAU,OACVkC,YAAa,OACbC,WAAY,OACZlC,UAAW,UAEToC,EAAY,CACdJ,QAAS,SACTjC,SAAU,OACVsC,SAAU,MACVC,aAAc,OACdC,UAAW,QAETC,EAAa,CACfD,UAAW,MACXP,QAAS,SACTM,aAAc,QAEZG,EAAa,CACfT,QAAS,SACTU,OAAQ,QAENC,EAAiB,CACnBX,QAAS,OACTY,cAAe,MACfC,eAAgB,gBAChBvD,MAAO,OACPwD,WAAY,UAEVC,EAAc,CAChB3C,OAAQ,kBACRC,aAAc,OACdqC,OAAQ,YACRM,QAAS,MACT/D,gBAAiB,QACjBK,MAAO,MACP0C,QAAS,OACTY,cAAe,SACfC,eAAgB,eAChBI,aAAc,SACdH,WAAY,UAEVI,EAAa,CACflB,QAAS,OACTY,cAAe,MACfO,SAAU,OACVH,QAAS,OACT1C,WAAY,QAEV8C,EAAa,CACfpD,UAAW,SACXuC,UAAW,OACXD,aAAc,QAEZe,EAAY,CACdrD,UAAW,SACXsC,aAAc,OACdvC,SAAU,QAERuD,EAAkB,CACpBlD,OAAQ,kBACRC,aAAc,OACdqC,OAAQ,OACRM,QAAS,MACT/D,gBAAiB,QACjBK,MAAO,MACP0C,QAAS,OACTY,cAAe,SACfC,eAAgB,eAChBI,aAAc,SACdH,WAAY,UAGVS,EAAM,CACRvB,QAAS,OACTY,cAAe,MACfE,WAAY,UAEVU,EAAU,CACZpE,OAAQ,QACR8C,WAAW,QACXK,UAAW,SAETkB,EAAW,CACbrE,OAAQ,QACR6C,YAAY,QACZM,UAAW,SA8IAmB,EAzII,SAAC7E,GAChB,SAAS8E,EAAQC,EAAKC,GAClB,OACItE,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAACqE,EAAD,CAAQzE,QAAQ,QAAQF,SAAUN,EAAMkF,YAAYF,GAAGG,MAAMJ,GAAK,KAClErE,EAAAC,EAAAC,cAACqE,EAAD,CAAQzE,QAAQ,QAAQF,SAAUN,EAAMkF,YAAYF,GAAGG,MAAMJ,GAAK,KAClErE,EAAAC,EAAAC,cAACqE,EAAD,CAAQzE,QAAQ,QAAQF,SAAUN,EAAMkF,YAAYF,GAAGG,MAAMJ,GAAK,KAClErE,EAAAC,EAAAC,cAACqE,EAAD,CAAQzE,QAAQ,QAAQF,SAAUN,EAAMkF,YAAYF,GAAGG,MAAMJ,GAAK,KAClErE,EAAAC,EAAAC,cAACqE,EAAD,CAAQzE,QAAQ,QAAQF,SAAUN,EAAMkF,YAAYF,GAAGG,MAAMJ,GAAK,KAClErE,EAAAC,EAAAC,cAACqE,EAAD,CAAQzE,QAAQ,QAAQF,SAAUN,EAAMkF,YAAYF,GAAGG,MAAMJ,GAAK,KAClErE,EAAAC,EAAAC,cAACqE,EAAD,CAAQzE,QAAQ,QAAQF,SAAUN,EAAMkF,YAAYF,GAAGG,MAAMJ,GAAK,KAClErE,EAAAC,EAAAC,cAACqE,EAAD,CAAQzE,QAAQ,QAAQF,SAAUN,EAAMkF,YAAYF,GAAGG,MAAMJ,GAAK,KAClErE,EAAAC,EAAAC,cAACqE,EAAD,CAAQzE,QAAQ,QAAQF,SAAUN,EAAMkF,YAAYF,GAAGG,MAAMJ,GAAK,KAClErE,EAAAC,EAAAC,cAACqE,EAAD,CAAQzE,QAAQ,QAAQF,SAAUN,EAAMkF,YAAYF,GAAGG,MAAMJ,GAAK,MAI9E,SAASK,EAAgBL,GACrB,IAAIC,EAAIhF,EAAMqF,MAOd,OACI3E,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAACqE,EAAD,CAAQ3E,SAAUN,EAAMkF,YAAY,GAAGI,eAAeN,GAAGD,GAAK,KAC9DrE,EAAAC,EAAAC,cAACqE,EAAD,CAAQ3E,SAAUN,EAAMkF,YAAY,GAAGI,eAAeN,GAAGD,GAAK,KAC9DrE,EAAAC,EAAAC,cAACqE,EAAD,CAAQ3E,SAAUN,EAAMkF,YAAY,GAAGI,eAAeN,GAAGD,GAAK,KAC9DrE,EAAAC,EAAAC,cAACqE,EAAD,CAAQ3E,SAAUN,EAAMkF,YAAY,GAAGI,eAAeN,GAAGD,GAAK,KAC9DrE,EAAAC,EAAAC,cAACqE,EAAD,CAAQ3E,SAAUN,EAAMkF,YAAY,GAAGI,eAAeN,GAAGD,GAAK,KAC9DrE,EAAAC,EAAAC,cAACqE,EAAD,CAAQ3E,SAAUN,EAAMkF,YAAY,GAAGI,eAAeN,GAAGD,GAAK,KAC9DrE,EAAAC,EAAAC,cAACqE,EAAD,CAAQ3E,SAAUN,EAAMkF,YAAY,GAAGI,eAAeN,GAAGD,GAAK,KAC9DrE,EAAAC,EAAAC,cAACqE,EAAD,CAAQ3E,SAAUN,EAAMkF,YAAY,GAAGI,eAAeN,GAAGD,GAAK,KAC9DrE,EAAAC,EAAAC,cAACqE,EAAD,CAAQ3E,SAAUN,EAAMkF,YAAY,GAAGI,eAAeN,GAAGD,GAAK,KAC9DrE,EAAAC,EAAAC,cAACqE,EAAD,CAAQ3E,SAAUN,EAAMkF,YAAY,GAAGI,eAAeN,GAAGD,GAAK,MAK1E,SAASQ,EAASP,EAAGQ,EAAMC,GACvB,OACI/E,EAAAC,EAAAC,cAAA,OAAKT,MAAO+D,GACRxD,EAAAC,EAAAC,cAAA,MAAIT,MAAOoD,GAAYkC,EAAQzF,EAAMkF,YAAYF,GAAGU,MACpDhF,EAAAC,EAAAC,cAAA,OAAKT,MAAO2D,GACRpD,EAAAC,EAAAC,cAAA,MAAIT,MAAO+C,GAAYsC,GACvB9E,EAAAC,EAAAC,cAAA,SAAOT,MAAOyD,GACVlD,EAAAC,EAAAC,cAAA,aACKkE,EAAQ,EAAGE,GACXF,EAAQ,EAAGE,GACXF,EAAQ,EAAGE,GACXF,EAAQ,EAAGE,GACXF,EAAQ,EAAGE,GACXF,EAAQ,EAAGE,GACXF,EAAQ,EAAGE,GACXF,EAAQ,EAAGE,GACXF,EAAQ,EAAGE,GACXF,EAAQ,EAAGE,GACXF,EAAQ,GAAIE,GACZF,EAAQ,GAAIE,GACZF,EAAQ,GAAIE,GACZF,EAAQ,GAAIE,GACZF,EAAQ,GAAIE,GACZF,EAAQ,GAAIE,GACZF,EAAQ,GAAIE,GACZF,EAAQ,GAAIE,MAIzBtE,EAAAC,EAAAC,cAAA,MAAIT,MAAOwD,GAAa3D,EAAMkF,YAAYF,GAAGnD,MAA7C,YA6CZ,OAAI7B,EAAM4B,WAGFlB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,MAAIT,MAAOoE,GAAX,4BAzCJ7D,EAAAC,EAAAC,cAAA,OAAKT,MAAOuE,GACZhE,EAAAC,EAAAC,cAAA,OAAKT,MAAOwE,EAASgB,IAAI,yBACzBjF,EAAAC,EAAAC,cAAA,OAAKT,MAAOsE,GACZ/D,EAAAC,EAAAC,cAAA,MAAIT,MAAOoD,GAAY,gBAAQvD,EAAMkF,YAAY,GAAGQ,MACpDhF,EAAAC,EAAAC,cAAA,OAAKT,MAAO2D,GACRpD,EAAAC,EAAAC,cAAA,MAAIT,MAAOmD,GAAX,OACA5C,EAAAC,EAAAC,cAAA,SAAOT,MAAOyD,GACVlD,EAAAC,EAAAC,cAAA,aACCwE,EAAgB,GAChBA,EAAgB,GAChBA,EAAgB,GAChBA,EAAgB,GAChBA,EAAgB,GAChBA,EAAgB,GAChBA,EAAgB,GAChBA,EAAgB,GAChBA,EAAgB,GAChBA,EAAgB,GAChBA,EAAgB,IAChBA,EAAgB,IAChBA,EAAgB,IAChBA,EAAgB,IAChBA,EAAgB,IAChBA,EAAgB,IAChBA,EAAgB,IAChBA,EAAgB,OAIrB1E,EAAAC,EAAAC,cAAA,MAAIT,MAAOwD,GAAa3D,EAAMkF,YAAY,GAAGrD,MAA7C,YAEJnB,EAAAC,EAAAC,cAAA,OAAKT,MAAOyE,EAAUe,IAAI,2BAYtBjF,EAAAC,EAAAC,cAAA,OAAKT,MAAOkE,GACPkB,EAAS,EAAG,MAAO,IACnBA,EAAS,EAAG,MAAO,IACnBA,EAAS,EAAG,MAAO,IACnBA,EAAS,EAAG,MAAO,KAExB7E,EAAAC,EAAAC,cAAA,KAAGgF,KAAK,MAAKlF,EAAAC,EAAAC,cAAA,KAAGT,MAAOqE,GAAV,iBAId,MC5LAqB,EA3CC,SAAC7F,GACb,OAAIA,EAAMkC,MAAMN,WACL,KAGHlB,EAAAC,EAAAC,cAAA,OAAKkF,GAAG,WACRpF,EAAAC,EAAAC,cAAA,OAAKkF,GAAG,YACNpF,EAAAC,EAAAC,cAAA,oBAEAF,EAAAC,EAAAC,cAAA,+CACAF,EAAAC,EAAAC,cAAA,mBAAUF,EAAAC,EAAAC,cAAA,SAAIZ,EAAMkC,MAAML,OAA1B,sBAAuDnB,EAAAC,EAAAC,cAAA,SAAIZ,EAAMkC,MAAM6D,cAAvE,OACArF,EAAAC,EAAAC,cAAA,UAAQoC,QAAShD,EAAMgG,OAAvB,SACAtF,EAAAC,EAAAC,cAAA,UAAQoC,QAAShD,EAAMiG,MAAvB,QACAvF,EAAAC,EAAAC,cAAA,UAAQoC,QAAShD,EAAMkG,SAAvB,UAEAxF,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,aACGZ,EAAM8E,QAAQ,GACd9E,EAAM8E,QAAQ,GACd9E,EAAM8E,QAAQ,GACd9E,EAAM8E,QAAQ,GACd9E,EAAM8E,QAAQ,GACd9E,EAAM8E,QAAQ,GACd9E,EAAM8E,QAAQ,GACd9E,EAAM8E,QAAQ,GACd9E,EAAM8E,QAAQ,GACd9E,EAAM8E,QAAQ,GACd9E,EAAM8E,QAAQ,IACd9E,EAAM8E,QAAQ,IACd9E,EAAM8E,QAAQ,IACd9E,EAAM8E,QAAQ,IACd9E,EAAM8E,QAAQ,IACd9E,EAAM8E,QAAQ,IACd9E,EAAM8E,QAAQ,IACd9E,EAAM8E,QAAQ,SCk7BlBqB,6MA58BbjE,MAAQ,CAENiD,MAAO,CACL,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC9C,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC9C,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC9C,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC9C,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC9C,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC9C,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC9C,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC9C,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC9C,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC9C,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC9C,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC9C,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC9C,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC9C,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC9C,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC9C,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC9C,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAEhDiB,aAAc,GACdC,iBAAkB,KAClBC,aAAc,KACdC,WAAW,EACXC,SAAS,EACT7E,UAAU,EACVC,YAAY,EACZC,MAAO,EACPkE,aAAc,IACdU,SAAU,EACVf,KAAM,GACNR,YAAc,GACdI,eAAgB,GAChBoB,cAAe,KAGjB5B,QAAU,SAACC,GACT,OACErE,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACqE,EAAD,CAAQ3E,SAAUgC,EAAKJ,MAAMiD,MAAMJ,GAAK,KACxCrE,EAAAC,EAAAC,cAACqE,EAAD,CAAQ3E,SAAUgC,EAAKJ,MAAMiD,MAAMJ,GAAK,KACxCrE,EAAAC,EAAAC,cAACqE,EAAD,CAAQ3E,SAAUgC,EAAKJ,MAAMiD,MAAMJ,GAAK,KACxCrE,EAAAC,EAAAC,cAACqE,EAAD,CAAQ3E,SAAUgC,EAAKJ,MAAMiD,MAAMJ,GAAK,KACxCrE,EAAAC,EAAAC,cAACqE,EAAD,CAAQ3E,SAAUgC,EAAKJ,MAAMiD,MAAMJ,GAAK,KACxCrE,EAAAC,EAAAC,cAACqE,EAAD,CAAQ3E,SAAUgC,EAAKJ,MAAMiD,MAAMJ,GAAK,KACxCrE,EAAAC,EAAAC,cAACqE,EAAD,CAAQ3E,SAAUgC,EAAKJ,MAAMiD,MAAMJ,GAAK,KACxCrE,EAAAC,EAAAC,cAACqE,EAAD,CAAQ3E,SAAUgC,EAAKJ,MAAMiD,MAAMJ,GAAK,KACxCrE,EAAAC,EAAAC,cAACqE,EAAD,CAAQ3E,SAAUgC,EAAKJ,MAAMiD,MAAMJ,GAAK,KACxCrE,EAAAC,EAAAC,cAACqE,EAAD,CAAQ3E,SAAUgC,EAAKJ,MAAMiD,MAAMJ,GAAK,SAI9C4B,UAAY,SAAC/D,GACG,MAAVA,EAAE1C,IACJoC,EAAKsE,WACc,MAAVhE,EAAE1C,IACXoC,EAAKuE,YACc,MAAVjE,EAAE1C,IACXoC,EAAKwE,WACc,MAAVlE,EAAE1C,KACXoC,EAAKyE,OAAOzE,EAAKJ,MAAMuE,aAI3BT,MAAQ,WACNgB,OAAOC,iBAAiB,WAAY3E,EAAKqE,WACrCrE,EAAKJ,MAAMsE,UACblE,EAAKC,SAAS,CAAEiE,SAAS,IACzBlE,EAAK4E,eAAe,UAEjB5E,EAAKJ,MAAMqE,WAEdjE,EAAK6E,oBAITlB,KAAO,WACLe,OAAOI,oBAAoB,WAAY9E,EAAKqE,WAC5CrE,EAAKC,SAAS,CAAEiE,SAAS,IACzBlE,EAAK4E,eAAe,WAGtBC,eAAiB,WACf,IAEME,EAASC,KAAKC,MAAM,EAAAD,KAAKD,UAFnB,EAKZ/E,EAAKkF,cADc,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACpBH,OAIhCG,cAAgB,SAACC,GAEfnF,EAAKC,SAAS,CACZ8D,iBAAkBoB,EAClBlB,WAAW,EACXE,SAAU,IAGZnE,EAAKoF,UACLpF,EAAKqF,mBACLrF,EAAKsF,mBAEL,IACIxB,EACAE,EAFAuB,EAAYvF,EAAKJ,MAAMiD,MAAM2C,IAAI,SAAApD,GAAG,OAAIA,EAAIqD,UAI9B,MAAdN,GACFnB,EAAe,IACfF,EAAe,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,KAEvB,MAAdqB,GACPnB,EAAe,IACfF,EAAe,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,KAEvB,MAAdqB,GACPnB,EAAe,IACfF,EAAe,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,KAEvB,MAAdqB,GACPnB,EAAe,IACfF,EAAe,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,KAGvB,MAAdqB,GACPnB,EAAe,IACfF,EAAe,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,KAGvB,MAAdqB,GACPnB,EAAe,IACfF,EAAe,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,KAGvB,MAAdqB,IACPnB,EAAe,IACfF,EAAe,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,KAE9C,IAAK,IAAIpB,EAAI,EAAGA,EAAIoB,EAAa4B,OAAQhD,IACvC6C,EAAUzB,EAAapB,GAAG,IAAIoB,EAAapB,GAAG,IAAMsB,EAAe,IAErEhE,EAAKC,SAAS,CACZ+C,eAAiBhD,EAAK2F,WAAWJ,GACjC1C,MAAO0C,EACPzB,aAAcA,EACdE,aAAcA,GACb,WACIhE,EAAKJ,MAAMqE,WACdjE,EAAKC,SAAS,CAAEgE,WAAW,GAAQ,WACjCjE,EAAK4E,eAAe,gBAM5BgB,QAAU,WAER,IAAIC,GAAU,EAOd,IALI7F,EAAK8F,iBAAmB9F,EAAK+F,2BAC/B/F,EAAK6E,iBACLgB,GAAU,GAGRA,EAAS,CAIX,IAHA,IAAIN,EAAYvF,EAAKJ,MAAMiD,MAAM2C,IAAI,SAAApD,GAAG,OAAIA,EAAIqD,UAC5CO,EAAmBhG,EAAKJ,MAAMkE,aAAa0B,IAAI,SAAAS,GAAK,OAAIA,EAAMR,UAEzD/C,EAAI,EAAGA,EAAIsD,EAAiBN,OAAQhD,IAC3C6C,EAAUS,EAAiBtD,GAAG,IAAIsD,EAAiBtD,GAAG,IAAM,IAG9D,IAAK,IAAIA,EAAI,EAAGA,EAAIsD,EAAiBN,OAAQhD,IACvCsD,EAAiBtD,GAAG,GAAK,EAAI,KAC/B6C,EAAUS,EAAiBtD,GAAG,GAAK,GAAGsD,EAAiBtD,GAAG,IAAM1C,EAAKJ,MAAMoE,aAAe,KAI9F,IAAK,IAAItB,EAAI,EAAGA,EAAIsD,EAAiBN,OAAQhD,IAC3CsD,EAAiBtD,GAAG,GAAKsD,EAAiBtD,GAAG,GAAK,EAGpD1C,EAAKC,SAAS,CACZ+C,eAAiBhD,EAAK2F,WAAWJ,GACjC1C,MAAO0C,EACPzB,aAAckC,IAGbhG,EAAKJ,MAAMsE,SACdlE,EAAK4E,eAAe,YAIxBA,eAAiB,SAACsB,GAChB,IAAIC,EACJ,OAAQD,GACN,IAAK,QAASC,EAAiBC,WAAWpG,EAAK4F,QAAS5F,EAAKJ,MAAM6D,cAAe,MAClF,IAAK,OAAQ4C,aAAaF,GAAiB,MAC3C,QAASG,QAAQC,IAAI,4DAIzBT,cAAgB,WACd,IAAK,IAAIpD,EAAI,EAAGA,EAAI1C,EAAKJ,MAAMkE,aAAa4B,OAAQhD,IAClD,IAAK1C,EAAKJ,MAAMiD,MAAM7C,EAAKJ,MAAMkE,aAAapB,GAAG,GAAK,GACpD,OAAO,KAIbqD,sBAAwB,WACtB,IAAK,IAAIrD,EAAI,EAAGA,EAAI1C,EAAKJ,MAAMkE,aAAa4B,OAAQhD,IAClD,GAEE1C,EAAKJ,MAAMiD,MAAM7C,EAAKJ,MAAMkE,aAAapB,GAAG,GAAK,IAGsC,MAAvF1C,EAAKJ,MAAMiD,MAAM7C,EAAKJ,MAAMkE,aAAapB,GAAG,GAAK,GAAG1C,EAAKJ,MAAMkE,aAAapB,GAAG,KAG/E1C,EAAKJ,MAAMiD,MAAM7C,EAAKJ,MAAMkE,aAAapB,GAAG,GAAK,GAAG1C,EAAKJ,MAAMkE,aAAapB,GAAG,MAAQ1C,EAAKJ,MAAMoE,aAAe,IAEjH,OAAO,KAIbwC,oBAAsB,WACpB,IAAK,IAAI9D,EAAI,EAAGA,EAAI1C,EAAKJ,MAAMkE,aAAa4B,OAAQhD,IAClD,GACyF,MAAvF1C,EAAKJ,MAAMiD,MAAM7C,EAAKJ,MAAMkE,aAAapB,GAAG,IAAI1C,EAAKJ,MAAMkE,aAAapB,GAAG,GAAK,IAEhF1C,EAAKJ,MAAMiD,MAAM7C,EAAKJ,MAAMkE,aAAapB,GAAG,IAAI1C,EAAKJ,MAAMkE,aAAapB,GAAG,GAAK,KAAO1C,EAAKJ,MAAMoE,aAAe,IACjH,OAAO,KAIbyC,mBAAqB,WACnB,IAAK,IAAI/D,EAAI,EAAGA,EAAI1C,EAAKJ,MAAMkE,aAAa4B,OAAQhD,IAClD,GACyF,MAAvF1C,EAAKJ,MAAMiD,MAAM7C,EAAKJ,MAAMkE,aAAapB,GAAG,IAAI1C,EAAKJ,MAAMkE,aAAapB,GAAG,GAAK,IAEhF1C,EAAKJ,MAAMiD,MAAM7C,EAAKJ,MAAMkE,aAAapB,GAAG,IAAI1C,EAAKJ,MAAMkE,aAAapB,GAAG,GAAK,KAAO1C,EAAKJ,MAAMoE,aAAe,IACjH,OAAO,KAOboB,QAAU,WAER,IADA,IAAIG,EAAYvF,EAAKJ,MAAMiD,MAAM2C,IAAI,SAAApD,GAAG,OAAIA,EAAIqD,UACvC/C,EAAI,EAAGA,GAAK,GAAIA,IACvB,IAAK,IAAIgE,EAAI,EAAGA,GAAK,EAAGA,IAClBnB,EAAU7C,GAAGgE,GAAGC,SAAS,OAC3BpB,EAAU7C,GAAGgE,GAAKnB,EAAU7C,GAAGgE,GAAGE,QAAQ,IAAK,KAIrD5G,EAAKC,SAAS,CACZ+C,eAAiBhD,EAAK2F,WAAWJ,GACjC1C,MAAO0C,OAGXD,iBAAmB,WAEjB,IADA,IAAIuB,EAAS7G,EAAKJ,MAAMiD,MAAM,GACrBH,EAAI,EAAGA,EAAImE,EAAOnB,OAAQhD,IACjC,IAAKmE,EAAOnE,GAAGiE,SAAS,OACjBE,EAAOnE,GAAGiE,SAAS,KAGtB,OAFA3G,EAAK2D,YACL3D,EAAKX,cAObA,SAAW,WACTW,EAAKC,SAAS,CACZZ,UAAU,IAEZW,EAAK2D,UAEPW,SAAW,WAKT,IAJA,IAAIuB,GAAU,EACVN,EAAYvF,EAAKJ,MAAMiD,MAAM2C,IAAI,SAAApD,GAAG,OAAIA,EAAIqD,UAC5CO,EAAmBhG,EAAKJ,MAAMkE,aAAa0B,IAAI,SAAAS,GAAK,OAAIA,EAAMR,UAEzD/C,EAAI,EAAGA,EAAIsD,EAAiBN,OAAQhD,IACtC6C,EAAUS,EAAiBtD,GAAG,IAAIsD,EAAiBtD,GAAG,GAAK,KAE9D1C,EAAKyG,uBAELZ,GAAU,GAEd,GAAIA,EAAS,CAEX,IAAK,IAAInD,EAAI,EAAGA,EAAIsD,EAAiBN,OAAQhD,IAC3C6C,EAAUS,EAAiBtD,GAAG,IAAIsD,EAAiBtD,GAAG,IAAM,IAG9D,IAAK,IAAIA,EAAI,EAAGA,EAAIsD,EAAiBN,OAAQhD,IAC3C6C,EAAUS,EAAiBtD,GAAG,IAAIsD,EAAiBtD,GAAG,GAAK,GAAK1C,EAAKJ,MAAMoE,aAAe,IAG5F,IAAK,IAAItB,EAAI,EAAGA,EAAIsD,EAAiBN,OAAQhD,IAC3CsD,EAAiBtD,GAAG,GAAKsD,EAAiBtD,GAAG,GAAK,EAEpD1C,EAAKC,SAAS,CACZ+C,eAAiBhD,EAAK2F,WAAWJ,GACjC1C,MAAO0C,EACPzB,aAAckC,QAIpBzB,UAAY,WAKV,IAJA,IAAIsB,GAAU,EACVN,EAAYvF,EAAKJ,MAAMiD,MAAM2C,IAAI,SAAApD,GAAG,OAAIA,EAAIqD,UAC5CO,EAAmBhG,EAAKJ,MAAMkE,aAAa0B,IAAI,SAAAS,GAAK,OAAIA,EAAMR,UAEzD/C,EAAI,EAAGA,EAAIsD,EAAiBN,OAAQhD,IACtC6C,EAAUS,EAAiBtD,GAAG,IAAIsD,EAAiBtD,GAAG,GAAK,KAE9D1C,EAAKwG,wBAELX,GAAU,GAGd,GAAIA,EAAS,CACX,IAAK,IAAInD,EAAI,EAAGA,EAAIsD,EAAiBN,OAAQhD,IAC3C6C,EAAUS,EAAiBtD,GAAG,IAAIsD,EAAiBtD,GAAG,IAAM,IAE9D,IAAK,IAAIA,EAAI,EAAGA,EAAIsD,EAAiBN,OAAQhD,IAC3C6C,EAAUS,EAAiBtD,GAAG,IAAIsD,EAAiBtD,GAAG,GAAK,GAAK1C,EAAKJ,MAAMoE,aAAe,IAE5F,IAAK,IAAItB,EAAI,EAAGA,EAAIsD,EAAiBN,OAAQhD,IAC3CsD,EAAiBtD,GAAG,GAAKsD,EAAiBtD,GAAG,GAAK,EAGtD1C,EAAKC,SAAS,CACZ+C,eAAiBhD,EAAK2F,WAAWJ,GACjC1C,MAAO0C,EACPzB,aAAckC,OAKlBxB,SAAW,WAKT,IAJA,IAAIqB,GAAU,EACVN,EAAYvF,EAAKJ,MAAMiD,MAAM2C,IAAI,SAAApD,GAAG,OAAIA,EAAIqD,UAC5CO,EAAmBhG,EAAKJ,MAAMkE,aAAa0B,IAAI,SAAAS,GAAK,OAAIA,EAAMR,UAEzD/C,EAAI,EAAGA,EAAIsD,EAAiBN,OAAQhD,IACtC6C,EAAUS,EAAiBtD,GAAG,GAAK,KAEtC1C,EAAK+F,0BAELF,GAAU,GAEd,GAAIA,EAAS,CACX,IAAK,IAAInD,EAAI,EAAGA,EAAIsD,EAAiBN,OAAQhD,IAC3C6C,EAAUS,EAAiBtD,GAAG,IAAIsD,EAAiBtD,GAAG,IAAM,IAE9D,IAAK,IAAIA,EAAI,EAAGA,EAAIsD,EAAiBN,OAAQhD,IAC3C6C,EAAUS,EAAiBtD,GAAG,GAAK,GAAGsD,EAAiBtD,GAAG,IAAM1C,EAAKJ,MAAMoE,aAAe,IAE5F,IAAK,IAAItB,EAAI,EAAGA,EAAIsD,EAAiBN,OAAQhD,IAC3CsD,EAAiBtD,GAAG,GAAKsD,EAAiBtD,GAAG,GAAK,EAGtD1C,EAAKC,SAAS,CACZ+C,eAAiBhD,EAAK2F,WAAWJ,GACjC1C,MAAO0C,EACPzB,aAAckC,OAIlBvB,OAAS,SAACN,GACR,IAEI2C,EAFAvB,EAAYvF,EAAKJ,MAAMiD,MAAM2C,IAAI,SAAApD,GAAG,OAAIA,EAAIqD,UAC5CO,EAAmBhG,EAAKJ,MAAMkE,aAAa0B,IAAI,SAAAS,GAAK,OAAIA,EAAMR,UAGlE,GAAoC,MAAhCzF,EAAKJ,MAAMmE,uBAER,GAAoC,MAAhC/D,EAAKJ,MAAMmE,iBACpB,OAAQI,GACN,KAAK,EACH2C,EAAe,EACfd,EAAiB,GAAG,KAAO,EAC3BA,EAAiB,GAAG,IAAM,EAC1BA,EAAiB,GAAG,IAAM,EAC1BA,EAAiB,GAAG,IAAM,EAC1BA,EAAiB,GAAG,IAAM,EAC1BA,EAAiB,GAAG,KAAO,EAC3BA,EAAiB,GAAG,IAAM,EAC1BA,EAAiB,GAAG,KAAO,EAE3B,MACF,KAAK,EACHc,EAAe,EACfd,EAAiB,GAAG,IAAM,EAC1BA,EAAiB,GAAG,IAAM,EAC1BA,EAAiB,GAAG,IAAM,EAC1BA,EAAiB,GAAG,IAAM,EAC1BA,EAAiB,GAAG,KAAO,EAC3BA,EAAiB,GAAG,KAAO,EAC3BA,EAAiB,GAAG,KAAO,EAC3BA,EAAiB,GAAG,KAAO,EAE3B,MACF,KAAK,EACHc,EAAe,EACfd,EAAiB,GAAG,IAAM,EAC1BA,EAAiB,GAAG,KAAO,EAC3BA,EAAiB,GAAG,IAAM,EAC1BA,EAAiB,GAAG,IAAM,EAC1BA,EAAiB,GAAG,KAAO,EAC3BA,EAAiB,GAAG,IAAM,EAC1BA,EAAiB,GAAG,KAAO,EAC3BA,EAAiB,GAAG,IAAM,EAE1B,MACF,KAAK,EACHc,EAAe,EACfd,EAAiB,GAAG,KAAO,EAC3BA,EAAiB,GAAG,KAAO,EAC3BA,EAAiB,GAAG,IAAM,EAC1BA,EAAiB,GAAG,IAAM,EAC1BA,EAAiB,GAAG,IAAM,EAC1BA,EAAiB,GAAG,IAAM,EAC1BA,EAAiB,GAAG,IAAM,EAC1BA,EAAiB,GAAG,IAAM,EAE1B,MACF,QAASM,QAAQC,IAAI,gCAElB,GAAoC,MAAhCvG,EAAKJ,MAAMmE,iBACpB,OAAQI,GACN,KAAK,EACH2C,EAAe,EACfd,EAAiB,GAAG,IAAM,EAC1BA,EAAiB,GAAG,IAAM,EAC1BA,EAAiB,GAAG,IAAM,EAC1BA,EAAiB,GAAG,IAAM,EAC1BA,EAAiB,GAAG,KAAO,EAC3BA,EAAiB,GAAG,IAAM,EAC1BA,EAAiB,GAAG,IAAM,EAC1BA,EAAiB,GAAG,IAAM,EAE1B,MACF,KAAK,EACHc,EAAe,EACfd,EAAiB,GAAG,IAAM,EAC1BA,EAAiB,GAAG,KAAO,EAC3BA,EAAiB,GAAG,IAAM,EAC1BA,EAAiB,GAAG,KAAO,EAC3BA,EAAiB,GAAG,IAAM,EAC1BA,EAAiB,GAAG,IAAM,EAC1BA,EAAiB,GAAG,IAAM,EAC1BA,EAAiB,GAAG,IAAM,EAE1B,MACF,KAAK,EACHc,EAAe,EACfd,EAAiB,GAAG,KAAO,EAC3BA,EAAiB,GAAG,KAAO,EAC3BA,EAAiB,GAAG,KAAO,EAC3BA,EAAiB,GAAG,IAAM,EAC1BA,EAAiB,GAAG,IAAM,EAC1BA,EAAiB,GAAG,KAAO,EAC3BA,EAAiB,GAAG,IAAM,EAC1BA,EAAiB,GAAG,IAAM,EAE1B,MACF,KAAK,EACHc,EAAe,EACfd,EAAiB,GAAG,KAAO,EAC3BA,EAAiB,GAAG,IAAM,EAC1BA,EAAiB,GAAG,IAAM,EAC1BA,EAAiB,GAAG,IAAM,EAC1BA,EAAiB,GAAG,KAAO,EAC3BA,EAAiB,GAAG,KAAO,EAC3BA,EAAiB,GAAG,IAAM,EAC1BA,EAAiB,GAAG,IAAM,EAE1B,MACF,QAASM,QAAQC,IAAI,gCAElB,GAAoC,MAAhCvG,EAAKJ,MAAMmE,iBACpB,OAAQI,GACN,KAAK,EACH2C,EAAe,EACfd,EAAiB,GAAG,IAAM,EAC1BA,EAAiB,GAAG,IAAM,EAC1BA,EAAiB,GAAG,IAAM,EAC1BA,EAAiB,GAAG,IAAM,EAC1BA,EAAiB,GAAG,IAAM,EAC1BA,EAAiB,GAAG,IAAM,EAC1BA,EAAiB,GAAG,IAAM,EAC1BA,EAAiB,GAAG,KAAO,EAE3B,MACF,KAAK,EACHc,EAAe,EACfd,EAAiB,GAAG,IAAM,EAC1BA,EAAiB,GAAG,IAAM,EAC1BA,EAAiB,GAAG,IAAM,EAC1BA,EAAiB,GAAG,KAAO,EAC3BA,EAAiB,GAAG,IAAM,EAC1BA,EAAiB,GAAG,IAAM,EAC1BA,EAAiB,GAAG,KAAO,EAC3BA,EAAiB,GAAG,KAAO,EAE3B,MACF,KAAK,EACHc,EAAe,EACfd,EAAiB,GAAG,IAAM,EAC1BA,EAAiB,GAAG,KAAO,EAC3BA,EAAiB,GAAG,KAAO,EAC3BA,EAAiB,GAAG,KAAO,EAC3BA,EAAiB,GAAG,IAAM,EAC1BA,EAAiB,GAAG,IAAM,EAC1BA,EAAiB,GAAG,KAAO,EAC3BA,EAAiB,GAAG,IAAM,EAE1B,MACF,KAAK,EACHc,EAAe,EACfd,EAAiB,GAAG,KAAO,EAC3BA,EAAiB,GAAG,IAAM,EAC1BA,EAAiB,GAAG,KAAO,EAC3BA,EAAiB,GAAG,IAAM,EAC1BA,EAAiB,GAAG,IAAM,EAC1BA,EAAiB,GAAG,IAAM,EAC1BA,EAAiB,GAAG,IAAM,EAC1BA,EAAiB,GAAG,IAAM,EAE1B,MACF,QAASM,QAAQC,IAAI,gCAElB,GAAoC,MAAhCvG,EAAKJ,MAAMmE,iBACpB,OAAQI,GACN,KAAK,EACH2C,EAAe,EACfd,EAAiB,GAAG,KAAO,EAC3BA,EAAiB,GAAG,IAAM,EAC1BA,EAAiB,GAAG,IAAM,EAC1BA,EAAiB,GAAG,IAAM,EAC1BA,EAAiB,GAAG,IAAM,EAC1BA,EAAiB,GAAG,KAAO,EAC3BA,EAAiB,GAAG,IAAM,EAC1BA,EAAiB,GAAG,IAAM,EAE1B,MACF,KAAK,EACHc,EAAe,EACfd,EAAiB,GAAG,IAAM,EAC1BA,EAAiB,GAAG,IAAM,EAC1BA,EAAiB,GAAG,IAAM,EAC1BA,EAAiB,GAAG,IAAM,EAC1BA,EAAiB,GAAG,KAAO,EAC3BA,EAAiB,GAAG,KAAO,EAC3BA,EAAiB,GAAG,IAAM,EAC1BA,EAAiB,GAAG,KAAO,EAE3B,MACF,KAAK,EACHc,EAAe,EACfd,EAAiB,GAAG,IAAM,EAC1BA,EAAiB,GAAG,KAAO,EAC3BA,EAAiB,GAAG,IAAM,EAC1BA,EAAiB,GAAG,IAAM,EAC1BA,EAAiB,GAAG,KAAO,EAC3BA,EAAiB,GAAG,IAAM,EAC1BA,EAAiB,GAAG,KAAO,EAC3BA,EAAiB,GAAG,IAAM,EAE1B,MACF,KAAK,EACHc,EAAe,EACfd,EAAiB,GAAG,KAAO,EAC3BA,EAAiB,GAAG,KAAO,EAC3BA,EAAiB,GAAG,IAAM,EAC1BA,EAAiB,GAAG,IAAM,EAC1BA,EAAiB,GAAG,IAAM,EAC1BA,EAAiB,GAAG,IAAM,EAC1BA,EAAiB,GAAG,IAAM,EAC1BA,EAAiB,GAAG,IAAM,EAE1B,MACF,QAASM,QAAQC,IAAI,gCAElB,GAAoC,MAAhCvG,EAAKJ,MAAMmE,iBACpB,OAAQI,GACN,KAAK,EACH2C,EAAe,EACfd,EAAiB,GAAG,KAAO,EAC3BA,EAAiB,GAAG,IAAM,EAC1BA,EAAiB,GAAG,IAAM,EAC1BA,EAAiB,GAAG,IAAM,EAC1BA,EAAiB,GAAG,IAAM,EAC1BA,EAAiB,GAAG,KAAO,EAC3BA,EAAiB,GAAG,IAAM,EAC1BA,EAAiB,GAAG,IAAM,EAE1B,MACF,KAAK,EACHc,EAAe,EACfd,EAAiB,GAAG,IAAM,EAC1BA,EAAiB,GAAG,IAAM,EAC1BA,EAAiB,GAAG,IAAM,EAC1BA,EAAiB,GAAG,IAAM,EAC1BA,EAAiB,GAAG,KAAO,EAC3BA,EAAiB,GAAG,KAAO,EAC3BA,EAAiB,GAAG,IAAM,EAC1BA,EAAiB,GAAG,IAAM,EAE1B,MACF,KAAK,EACHc,EAAe,EACfd,EAAiB,GAAG,IAAM,EAC1BA,EAAiB,GAAG,KAAO,EAC3BA,EAAiB,GAAG,IAAM,EAC1BA,EAAiB,GAAG,IAAM,EAC1BA,EAAiB,GAAG,KAAO,EAC3BA,EAAiB,GAAG,IAAM,EAC1BA,EAAiB,GAAG,IAAM,EAC1BA,EAAiB,GAAG,KAAO,EAE3B,MACF,KAAK,EACHc,EAAe,EACfd,EAAiB,GAAG,KAAO,EAC3BA,EAAiB,GAAG,KAAO,EAC3BA,EAAiB,GAAG,IAAM,EAC1BA,EAAiB,GAAG,IAAM,EAC1BA,EAAiB,GAAG,IAAM,EAC1BA,EAAiB,GAAG,IAAM,EAC1BA,EAAiB,GAAG,KAAO,EAC3BA,EAAiB,GAAG,IAAM,EAE1B,MACF,QAASM,QAAQC,IAAI,gCAGlB,GAAoC,MAAhCvG,EAAKJ,MAAMmE,iBACpB,OAAQI,GACN,KAAK,EACH2C,EAAe,EACfd,EAAiB,GAAG,KAAO,EAC3BA,EAAiB,GAAG,IAAM,EAC1BA,EAAiB,GAAG,IAAM,EAC1BA,EAAiB,GAAG,IAAM,EAC1BA,EAAiB,GAAG,IAAM,EAC1BA,EAAiB,GAAG,KAAO,EAC3BA,EAAiB,GAAG,IAAM,EAC1BA,EAAiB,GAAG,IAAM,EAE1B,MACF,KAAK,EACHc,EAAe,EACfd,EAAiB,GAAG,IAAM,EAC1BA,EAAiB,GAAG,IAAM,EAC1BA,EAAiB,GAAG,IAAM,EAC1BA,EAAiB,GAAG,IAAM,EAC1BA,EAAiB,GAAG,KAAO,EAC3BA,EAAiB,GAAG,KAAO,EAC3BA,EAAiB,GAAG,IAAM,EAC1BA,EAAiB,GAAG,KAAO,EAE3B,MACF,KAAK,EACHc,EAAe,EACfd,EAAiB,GAAG,IAAM,EAC1BA,EAAiB,GAAG,KAAO,EAC3BA,EAAiB,GAAG,IAAM,EAC1BA,EAAiB,GAAG,IAAM,EAC1BA,EAAiB,GAAG,KAAO,EAC3BA,EAAiB,GAAG,IAAM,EAC1BA,EAAiB,GAAG,KAAO,EAC3BA,EAAiB,GAAG,KAAO,EAE3B,MACF,KAAK,EACHc,EAAe,EACfd,EAAiB,GAAG,KAAO,EAC3BA,EAAiB,GAAG,KAAO,EAC3BA,EAAiB,GAAG,IAAM,EAC1BA,EAAiB,GAAG,IAAM,EAC1BA,EAAiB,GAAG,IAAM,EAC1BA,EAAiB,GAAG,IAAM,EAC1BA,EAAiB,GAAG,KAAO,EAC3BA,EAAiB,GAAG,IAAM,EAE1B,MACF,QAASM,QAAQC,IAAI,2BAKzB,GAAIvG,EAAK+G,gBAAgBf,GAAmB,CAC1C,IAAK,IAAItD,EAAI,EAAGA,EAAI1C,EAAKJ,MAAMkE,aAAa4B,OAAQhD,IAClD6C,EAAUvF,EAAKJ,MAAMkE,aAAapB,GAAG,IAAI1C,EAAKJ,MAAMkE,aAAapB,GAAG,IAAM,IAE5E,IAAK,IAAIA,EAAI,EAAGA,EAAIsD,EAAiBN,OAAQhD,IAC3C6C,EAAUS,EAAiBtD,GAAG,IAAIsD,EAAiBtD,GAAG,IAAM1C,EAAKJ,MAAMoE,aAAe,IAExFhE,EAAKC,SAAS,CACZ+C,eAAiBhD,EAAK2F,WAAWJ,GACjC1C,MAAO0C,EACPzB,aAAckC,EACd7B,SAAU2C,QAMhBC,gBAAkB,SAACC,GAIjB,IAHA,IAAIC,GAAe,EACfC,GAAgB,EAEXxE,EAAI,EAAGA,EAAIsE,EAAkBtB,OAAQhD,IACxCsE,EAAkBtE,GAAG,GAAK,IAC5BuE,GAAe,GACXD,EAAkBtE,GAAG,GAAK,KAC9BuE,GAAe,GACXD,EAAkBtE,GAAG,GAAK,IAC9BuE,GAAe,GACXD,EAAkBtE,GAAG,GAAK,IAC9BuE,GAAe,GAKnB,IAAKA,EACH,OAAO,EAGT,IAAK,IAAIvE,EAAI,EAAGA,EAAIsE,EAAkBtB,OAAQhD,IACiC,MAAzE1C,EAAKJ,MAAMiD,MAAMmE,EAAkBtE,GAAG,IAAI,CAACsE,EAAkBtE,GAAG,MAC9D1C,EAAKJ,MAAMiD,MAAMmE,EAAkBtE,GAAG,IAAI,CAACsE,EAAkBtE,GAAG,OAAS1C,EAAKJ,MAAMoE,aAAe,MACrGkD,GAAgB,GAItB,OAAQD,GAAgBC,KAG1B7B,iBAAmB,WAEjB,IADA,IAOM8B,EAPFC,EAAe,GACV1E,EAAI,EAAGA,EAAI1C,EAAKJ,MAAMiD,MAAM6C,OAAQhD,IACtC1C,EAAKJ,MAAMiD,MAAMH,GAAGiE,SAAS,MAChCS,EAAaC,KAAK3E,GAGlB0E,EAAa1B,OAAS,IAGtByB,EADEnH,EAAKJ,MAAM6D,aAAe,GACjB,GAEAzD,EAAKJ,MAAM6D,aAAsC,GAAtB2D,EAAa1B,OAErD1F,EAAKC,SAAS,CACZV,MAAOS,EAAKJ,MAAML,MAAS6H,EAAa1B,OAAS0B,EAAa1B,OAC9DjC,aAAc0D,IAEhBnH,EAAKsH,aAAaF,OAGtBE,aAAe,SAACC,GAEd,IADA,IAAIhC,EAAYvF,EAAKJ,MAAMiD,MAAM2C,IAAI,SAAApD,GAAG,OAAIA,EAAIqD,UACvC/C,EAAI,EAAGA,EAAI6E,EAAM7B,OAAQhD,IAChC,IAAK,IAAIgE,EAAI,EAAGA,EAAI,GAAIA,IACtBnB,EAAUgC,EAAM7E,IAAIgE,GAAK,IAG7B1G,EAAKC,SAAS,CACZ+C,eAAiBhD,EAAK2F,WAAWJ,GACjC1C,MAAO0C,IAETa,WAAW,WACTpG,EAAKwH,gBAAgBD,IACpB,QAELC,gBAAkB,SAACD,GAIjB,IAHA,IAAIhC,EAAYvF,EAAKJ,MAAMiD,MAAM2C,IAAI,SAAApD,GAAG,OAAIA,EAAIqD,UAGvC/C,EAAI,EAAGA,EAAI6E,EAAM7B,OAAQhD,IAChC,IAAK,IAAIgE,EAAIa,EAAM7E,GAAIgE,GAAK,EAAGA,IAC7B,GAAU,IAANA,EACFnB,EAAUmB,GAAK,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,UAG7D,IAAK,IAAIe,EAAI,EAAGA,EAAI,GAAIA,IACjBlC,EAAUmB,EAAI,GAAGe,GAAGd,SAAS,MAASpB,EAAUmB,GAAGe,GAAGd,SAAS,OAClEpB,EAAUmB,GAAGe,GAAKlC,EAAUmB,EAAI,GAAGe,IAM7CzH,EAAKC,SAAS,CACZ+C,eAAiBhD,EAAK2F,WAAWJ,GACjC1C,MAAO0C,OAGXmC,YAAc,WACZC,MAAM,UAAW,CACfC,OAAQ,MACRC,QAAS,CACPC,OAAU,mBACVC,eAAgB,sBAGnBC,KAAK,SAACC,GAAc,OAAOA,EAASC,SACpCF,KAAK,SAACE,GAAUlI,EAAKC,SAAS,CAAC2C,YAAcsF,MAC7CF,KAAK,WACEhI,EAAKmI,iBACPnI,EAAKoI,sBACIpI,EAAKqI,cACdrI,EAAKsI,iBAELtI,EAAKuI,aACLvI,EAAKwI,gBAAgB,eAI3BL,eAAiB,WACf,OAAInI,EAAKJ,MAAML,OAASS,EAAKJ,MAAMgD,YAAY,GAAGrD,SAMpD8I,YAAc,WAEZ,IADA,IAAII,GAAY,EACP/F,EAAI,EAAGA,EAAI,EAAGA,IACjB1C,EAAKJ,MAAML,OAASS,EAAKJ,MAAMgD,YAAYF,GAAGnD,QAChDkJ,GAAY,GAGhB,OAAOA,KAETH,cAAgB,WACdtI,EAAKC,SAAS,CACZ+C,eAAiB,WAChB,WACDhD,EAAK0I,cAITN,oBAAsB,WAEpB,IADA,IAAIO,EAAkB,GACbjG,EAAI,EAAGA,EAAI,IAAKA,IACvBiG,EAAgBtB,KAAKrH,EAAKJ,MAAMoD,eAAeN,IAEjD1C,EAAKC,SAAS,CACZ+C,eAAgB2F,GACf,WACF3I,EAAK0I,cAIVA,OAAS,WACgB,KAApB1I,EAAKJ,MAAMwD,MACduE,MAAM,IAAK,CACTC,OAAQ,OACRgB,KAAMC,KAAKC,UAAU,CACnB1F,KAAOpD,EAAKJ,MAAMwD,KAClB7D,MAAQS,EAAKJ,MAAML,MACnBsD,MAAO7C,EAAKJ,MAAMiD,MAClBG,eAAiBhD,EAAKJ,MAAMoD,iBAE9B6E,QAAS,CAEPE,eAAgB,sBAKnBC,KAAK,WACJhI,EAAK+I,iBAIXR,WAAa,WACXvI,EAAKC,SAAS,CACZX,YAAa,OAGjByJ,UAAY,WACVpB,MAAM,UAAW,CACfC,OAAQ,MACRC,QAAS,CACPC,OAAU,mBACVC,eAAgB,sBAGnBC,KAAK,SAACC,GAAc,OAAOA,EAASC,SACpCF,KAAK,SAACE,GAAUlI,EAAKC,SAAS,CAAC2C,YAAcsF,GAC5C,WACElI,EAAKwI,gBAAgB,SACrBxI,EAAKuI,oBAKThI,aAAe,SAACD,GACdN,EAAKC,SAAS,CAAEmD,KAAM9C,EAAE0I,OAAOxI,WAGjCmF,WAAa,SAACJ,GACZ,IAAI0D,EAAqBjJ,EAAKJ,MAAMoD,eAAewC,IAAI,SAAApD,GAAG,OAAIA,EAAIqD,UAElE,OADAwD,EAAmB5B,KAAK9B,GACjB0D,KAETC,kBAAoB,WAChB,IAAIC,EAAUnJ,EAAKJ,MAAMwE,cAAgB,EACrC+E,IAAYnJ,EAAKJ,MAAMgD,YAAY,GAAGI,eAAe0C,OACvD1F,EAAKC,SAAS,CAACmE,cAAgB,IAEjCpE,EAAKC,SAAS,CAACmE,cAAe+E,OAGlCX,gBAAkB,SAACtC,GACjB,IAAIkD,EACW,UAAZlD,EACDkD,EAAWC,YAAYrJ,EAAKkJ,kBAAmB,KAC1B,SAAZhD,GACToD,cAAcF,4EAMhB,OACEhL,EAAAC,EAAAC,cAAA,WAKEF,EAAAC,EAAAC,cAACiL,EAAD,CACEjK,WAAYkK,KAAK5J,MAAMN,WACvBsD,YAAe4G,KAAK5J,MAAMgD,YAC1BG,MAASyG,KAAK5J,MAAMwE,gBAGtBhG,EAAAC,EAAAC,cAACmL,EAAD,CACEjG,GAAG,WACHlE,WAAYkK,KAAK5J,MAAMN,WACvBC,MAAOiK,KAAK5J,MAAML,MAClBF,SAAUmK,KAAK5J,MAAMP,WACvBjB,EAAAC,EAAAC,cAACoL,EAAD,CACErK,SAAUmK,KAAK5J,MAAMP,SACrBC,WAAYkK,KAAK5J,MAAMN,WACvBS,YAAayJ,KAAK9B,YAClBjH,UAAW+I,KAAK5J,MAAMwD,KACtB7C,aAAciJ,KAAKjJ,eACrBnC,EAAAC,EAAAC,cAACqL,EAAD,CACE/J,MAAO4J,KAAK5J,MACZ4C,QAASgH,KAAKhH,QACdmB,KAAM6F,KAAK7F,KACXD,MAAO8F,KAAK9F,MACZE,QAAS4F,KAAK9B,sBAt8BN/G,aCGEiJ,QACW,cAA7BlF,OAAOmF,SAASC,UAEe,UAA7BpF,OAAOmF,SAASC,UAEhBpF,OAAOmF,SAASC,SAASC,MACvB,2DCZNC,IAAS9J,OAAO9B,EAAAC,EAAAC,cAAC2L,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMtC,KAAK,SAAAuC,GACjCA,EAAaC","file":"static/js/main.2cb28a2d.chunk.js","sourcesContent":["import React from 'react'\n\nconst Square = (props) => {\n    function getColor(key){\n\t\tswitch(key[0]) {\n            case \"e\" : return 'grey';\n            case \"y\" : return 'yellow';\n\t\t\t      case \"b\" : return 'blue';\n\t\t\t      case \"r\" : return 'red';\n\t\t\t      case \"g\" : return 'green';\n            case 'o' : return 'orange';\n            case 'p' : return 'purple';\n            case 'v' : return 'violet';\n            case 'w' : return 'white';\n            default : return 'grey';\t\n\t\t}\n  }\n  function getSize(key){\n    if (key === 'small'){ \n      return '8px'\n    } else {\n      return '22px'\n    }\n  }\n\t\n\tlet style = {\n    backgroundColor: getColor(props.colorKey),\n    height: getSize(props.sizeKey),\n    width: getSize(props.sizeKey)\n\t\t} \n\t\n\n  return(\n    <td style={style}></td>\n  );\n\n}\n\nexport default Square;","import React from 'react';\n\nconst style = {\n    color: 'white',\n    opacity: '1' \n  } \n  const divStyle = {\n    marginBlockStart: '10px',\n    marginBlockEnd: '10px',\n    backgroundColor: 'rgba(0,0,0,.8)',\n    color: 'white',\n    fontSize: '50px',\n    width:'90%',\n    height:'120%',\n    textAlign: 'center',\n    // margin: 'auto',\n    position: 'absolute',\n    top: '3%',\n    left: '4.5%',\n    border: '3px solid white',\n    borderRadius: '20px',\n    paddingTop: '5%'\n  }\n\nconst GameOver = (props) =>{\n    let message;\n    if (props.gameOver && !props.showScores){\n        message = <div style={divStyle}>\n        <h1 style={style}>GAME OVER</h1>\n        <h3>Final Score: {props.score}</h3>\n        <h4>Enter Your name</h4>\n        </div>\n\n    } else {\n        message = null\n    }\n    return message\n}\n\n\n\nexport default GameOver;","import React, { Component } from 'react';\n\nconst style  = {\n    textAlign: 'center',\n    position: 'Absolute',\n    width: '20%',\n    left: '40%',\n    top: '100%'\n}\nconst inputStyle = {\n    border : '2px solid white',\n    backgroundColor : 'rgba(0,0,0,.8)',\n    height: '50px',\n    width: '250px',\n    color: 'white',\n    fontSize: '30px',\n    borderRadius: '5px',\n    textAlign: 'center',\n}\nconst buttonStyle = {\n    height: '50px',\n    width: '250px',\n    // marginTop: '10px',\n    fontSize: '20px',\n    borderRadius: '5px',\n    cursor: 'pointer',\n    border: '3px solid black' \n\n}\n\n\nclass Form extends Component {\n    state = {\n        message : \"Submit\"\n    }\n\n    clickHandle = (props) => {\n        props.handleClick();\n        this.setState({message: \"Loading....\"})\n    }\n\n    render = (props) => {\n        if (this.props.gameOver & !this.props.showScores){\n        return (\n            <div style={style}>\n                <input style={inputStyle} type=\"text\" maxLength=\"13\" onChange={(e) => this.props.handleChange(e)} value={this.props.nameValue} />\n                <button style={buttonStyle} onClick={()=>{this.clickHandle(this.props)}}>{this.state.message}</button>\n            </div>\n        );\n        } else {\n            return null;\n        }\n    }   \n}\n\nexport default Form;","import React from 'react'\nimport Square from '../Square/Square'\n\nconst rankStyle = {\n    display: 'inline',\n    fontSize: '60px',\n    marginRight: '10px',\n    marginLeft: '25px',\n    textAlign: 'center'\n}\nconst kingRank  = {\n    display: 'inline',\n    fontSize: '85px',\n    marginRight: '30px',\n    marginLeft: '50px',\n    textAlign: 'center'\n}\nconst nameStyle = {\n    display: 'inline',\n    fontSize: '35px',\n    maxWidth: '90%',\n    marginBottom: '10px',\n    marginTop: '10px'\n}\nconst scoreStyle = {\n    marginTop: '0px',\n    display: 'inline',\n    marginBottom: '15px',\n}\nconst tableStyle = {\n    display: 'inline',\n    margin: 'auto',\n}\nconst containerStyle = {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    width: '100%',\n    alignItems: 'center',\n}\nconst columnStyle = {\n    border: '3px solid black',\n    borderRadius: '20px',\n    margin: '20px 20px',\n    padding: '5px',\n    backgroundColor: 'white',\n    width: '20%',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-around',\n    alignContent: 'center',\n    alignItems: 'center',\n}\nconst boardStyle = {\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    padding: '50px',\n    paddingTop: '20px'\n}\nconst titleStyle = {\n    textAlign: 'center',\n    marginTop: '50px',\n    marginBottom: '20px'\n}\nconst linkStyle = {\n    textAlign: 'center',\n    marginBottom: '50px',\n    fontSize: '22px'\n}\nconst kingColumnStyle = {\n    border: '3px solid black',\n    borderRadius: '20px',\n    margin: 'auto',\n    padding: '5px',\n    backgroundColor: 'white',\n    width: '40%',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-around',\n    alignContent: 'center',\n    alignItems: 'center',\n}\n\nconst row = {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n}\nconst imgLeft = {\n    height: '350px',\n    marginLeft:'100px',\n    marginTop: '150px'\n}\nconst imgRight = {\n    height: '350px',\n    marginRight:'100px',\n    marginTop: '150px'\n\n}\n\n\nconst ScoreBoard = (props) => {\n    function makeRow(num, i) {\n        return (\n            <tr>\n                <Square sizeKey='small' colorKey={props.savedStates[i].board[num][0]} />\n                <Square sizeKey='small' colorKey={props.savedStates[i].board[num][1]} />\n                <Square sizeKey='small' colorKey={props.savedStates[i].board[num][2]} />\n                <Square sizeKey='small' colorKey={props.savedStates[i].board[num][3]} />\n                <Square sizeKey='small' colorKey={props.savedStates[i].board[num][4]} />\n                <Square sizeKey='small' colorKey={props.savedStates[i].board[num][5]} />\n                <Square sizeKey='small' colorKey={props.savedStates[i].board[num][6]} />\n                <Square sizeKey='small' colorKey={props.savedStates[i].board[num][7]} />\n                <Square sizeKey='small' colorKey={props.savedStates[i].board[num][8]} />\n                <Square sizeKey='small' colorKey={props.savedStates[i].board[num][9]} />\n            </tr>\n        )\n    }\n    function makeTimeWarpRow(num) {\n        let i = props.index\n        // console.log(0, i)\n        // console.log(1, props)\n        // console.log(2, props.previousBoards)\n        // console.log(3, props.previousBoards[i])\n        // console.log(4, props.previousBoards[i][0])\n        // console.log(5, props.previousBoards[i][0][0])\n        return (\n            <tr>\n                <Square colorKey={props.savedStates[0].previousBoards[i][num][0]} />\n                <Square colorKey={props.savedStates[0].previousBoards[i][num][1]} />\n                <Square colorKey={props.savedStates[0].previousBoards[i][num][2]} />\n                <Square colorKey={props.savedStates[0].previousBoards[i][num][3]} />\n                <Square colorKey={props.savedStates[0].previousBoards[i][num][4]} />\n                <Square colorKey={props.savedStates[0].previousBoards[i][num][5]} />\n                <Square colorKey={props.savedStates[0].previousBoards[i][num][6]} />\n                <Square colorKey={props.savedStates[0].previousBoards[i][num][7]} />\n                <Square colorKey={props.savedStates[0].previousBoards[i][num][8]} />\n                <Square colorKey={props.savedStates[0].previousBoards[i][num][9]} />\n            </tr>\n        )\n\n    }\n    function makeCard(i, rank, crown) {\n        return (\n            <div style={columnStyle}>\n                <h1 style={nameStyle}>{crown + props.savedStates[i].name}</h1>\n                <div style={containerStyle}>\n                    <h1 style={rankStyle}>{rank}</h1>\n                    <table style={tableStyle}>\n                        <tbody>\n                            {makeRow(0, i)}\n                            {makeRow(1, i)}\n                            {makeRow(2, i)}\n                            {makeRow(3, i)}\n                            {makeRow(4, i)}\n                            {makeRow(5, i)}\n                            {makeRow(6, i)}\n                            {makeRow(7, i)}\n                            {makeRow(8, i)}\n                            {makeRow(9, i)}\n                            {makeRow(10, i)}\n                            {makeRow(11, i)}\n                            {makeRow(12, i)}\n                            {makeRow(13, i)}\n                            {makeRow(14, i)}\n                            {makeRow(15, i)}\n                            {makeRow(16, i)}\n                            {makeRow(17, i)}\n                        </tbody>\n                    </table>\n                </div>\n                <h1 style={scoreStyle}>{props.savedStates[i].score} points</h1>\n            </div>\n\n        )\n\n    }\n    function makeTimeWarp() {\n        return (\n            <div style={row}>\n            <img style={imgLeft} src=\"../../laurelLeft.png\"></img>\n            <div style={kingColumnStyle}>\n            <h1 style={nameStyle}>{'👑 ' + props.savedStates[0].name}</h1>\n            <div style={containerStyle}>\n                <h1 style={kingRank}>1st</h1>\n                <table style={tableStyle}>\n                    <tbody>\n                    {makeTimeWarpRow(0)}\n                    {makeTimeWarpRow(1)}\n                    {makeTimeWarpRow(2)}\n                    {makeTimeWarpRow(3)}\n                    {makeTimeWarpRow(4)}\n                    {makeTimeWarpRow(5)}\n                    {makeTimeWarpRow(6)}\n                    {makeTimeWarpRow(7)}\n                    {makeTimeWarpRow(8)}\n                    {makeTimeWarpRow(9)}\n                    {makeTimeWarpRow(10)}\n                    {makeTimeWarpRow(11)}\n                    {makeTimeWarpRow(12)}\n                    {makeTimeWarpRow(13)}\n                    {makeTimeWarpRow(14)}\n                    {makeTimeWarpRow(15)}\n                    {makeTimeWarpRow(16)}\n                    {makeTimeWarpRow(17)}\n                    </tbody>\n                    </table>\n                </div>\n                <h1 style={scoreStyle}>{props.savedStates[0].score} points</h1>\n            </div>\n            <img style={imgRight} src=\"../../laurelRight.png\"></img>\n\n\n            </div>\n        )\n    }\n    if (props.showScores) {\n\n        return (\n            <div>\n                <h1 style={titleStyle}>React TETRIS High Scores</h1>\n                {makeTimeWarp()}\n                <div style={boardStyle}>\n                    {makeCard(1, '2nd', '')}\n                    {makeCard(2, '3rd', '')}\n                    {makeCard(3, '4th', '')}\n                    {makeCard(4, '5th', '')}\n                </div>\n                <a href='./'><p style={linkStyle}>Play Again?</p></a>                \n            </div>\n        )\n    } else {\n        return null;\n    }\n}\n\n\n\nexport default ScoreBoard;\n","import React from 'react'\n\nconst Display = (props) => {\n    if (props.state.showScores){\n        return null\n    } else {\n        return (\n            <div id=\"content\">\n            <div id=\"innerDiv\">\n              <h1>TETRIS</h1> \n  \n              <p>Control pieces with W, A, S and D.</p>\n              <p>SCORE: <b>{props.state.score}</b> SPEED: 1 tick per <b>{props.state.gravitySpeed}</b> ms</p>\n              <button onClick={props.start}>Start</button>\n              <button onClick={props.stop}>Stop</button>\n              <button onClick={props.endGame}>Scores</button>\n\n              <table>\n                <tbody>\n                  {props.makeRow(0)}\n                  {props.makeRow(1)}\n                  {props.makeRow(2)}\n                  {props.makeRow(3)}\n                  {props.makeRow(4)}\n                  {props.makeRow(5)}\n                  {props.makeRow(6)}\n                  {props.makeRow(7)}\n                  {props.makeRow(8)}\n                  {props.makeRow(9)}\n                  {props.makeRow(10)}\n                  {props.makeRow(11)}\n                  {props.makeRow(12)}\n                  {props.makeRow(13)}\n                  {props.makeRow(14)}\n                  {props.makeRow(15)}\n                  {props.makeRow(16)}\n                  {props.makeRow(17)}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        )\n    }\n}\n\nexport default Display;","import React, { Component } from 'react';\nimport './App.css';\nimport Square from './Square/Square';\nimport GameOver from './GameOver/GameOver';\nimport Form from './Form/Form';\nimport ScoreBoard from './ScoreBoard/ScoreBoard';\nimport Display from './Display/Display';\n\n\nclass App extends Component {\n  state = {\n    // board: Array(18).fill(Array(10).fill('e')), DOESN'T WORK\n    board: [\n      ['e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e'],\n      ['e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e'],\n      ['e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e'],\n      ['e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e'],\n      ['e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e'],\n      ['e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e'],\n      ['e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e'],\n      ['e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e'],\n      ['e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e'],\n      ['e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e'],\n      ['e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e'],\n      ['e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e'],\n      ['e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e'],\n      ['e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e'],\n      ['e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e'],\n      ['e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e'],\n      ['e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e'],\n      ['e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e'],\n    ],\n    currentPiece: [],\n    currentPieceName: null,\n    currentColor: null,\n    gameBegun: false,\n    stopped: true,\n    gameOver: false,\n    showScores: false,\n    score: 0,\n    gravitySpeed: 400,\n    rotation: 1,\n    name: '',\n    savedStates : [],\n    previousBoards: [],\n    timeWarpIndex: 0\n  }\n\n  makeRow = (num) => {\n    return (\n      <tr>\n        <Square colorKey={this.state.board[num][0]} />\n        <Square colorKey={this.state.board[num][1]} />\n        <Square colorKey={this.state.board[num][2]} />\n        <Square colorKey={this.state.board[num][3]} />\n        <Square colorKey={this.state.board[num][4]} />\n        <Square colorKey={this.state.board[num][5]} />\n        <Square colorKey={this.state.board[num][6]} />\n        <Square colorKey={this.state.board[num][7]} />\n        <Square colorKey={this.state.board[num][8]} />\n        <Square colorKey={this.state.board[num][9]} />\n      </tr>\n    )\n  }\n  keyRouter = (e) => {\n    if (e.key === 'a') {\n      this.moveLeft();\n    } else if (e.key === 'd') {\n      this.moveRight();\n    } else if (e.key === 's') {\n      this.moveDown();\n    } else if (e.key === 'w') {\n      this.rotate(this.state.rotation);\n    }\n  }\n\n  start = () => {\n    window.addEventListener('keypress', this.keyRouter)\n    if (this.state.stopped) {\n      this.setState({ stopped: false })\n      this.controlGravity('start');\n    }\n    if (!this.state.gameBegun) {\n      // this.setState({gameBegun : true})\n      this.getRandomPiece();\n    }\n  }\n\n  stop = () => {\n    window.removeEventListener('keypress', this.keyRouter)\n    this.setState({ stopped: true })\n    this.controlGravity('stop')\n  }\n\n  getRandomPiece = () => {\n    const min = 0;\n    const max = 7;\n    const random = Math.floor(Math.random() * (max - min)) + min;\n\n    const pieceArray = ['O', 'I', 'S', 'Z', 'L', 'J', 'T']\n    this.generatePiece(pieceArray[random])\n    // this.generatePiece('I')\n  };\n\n  generatePiece = (shapeName) => {\n\n    this.setState({\n      currentPieceName: shapeName,\n      gameBegun: true,\n      rotation: 1\n    })\n\n    this.clearMs();\n    this.checkForFullRows();\n    this.checkForGameOver();\n\n    let boardCopy = this.state.board.map(row => row.slice());\n    let currentPiece;\n    let currentColor;\n\n    if (shapeName === 'O') {\n      currentColor = 'y';\n      currentPiece = [[0, 4], [0, 5], [1, 4], [1, 5]]\n    }\n    else if (shapeName === 'I') {\n      currentColor = 'b'\n      currentPiece = [[0, 3], [0, 4], [0, 5], [0, 6]]\n    }\n    else if (shapeName === 'S') {\n      currentColor = 'g'\n      currentPiece = [[0, 4], [0, 5], [1, 3], [1, 4]]\n    }\n    else if (shapeName === 'Z') {\n      currentColor = 'r'\n      currentPiece = [[0, 3], [0, 4], [1, 4], [1, 5]]\n\n    }\n    else if (shapeName === 'J') {\n      currentColor = 'o'\n      currentPiece = [[1, 3], [1, 4], [1, 5], [0, 3]]\n\n    }\n    else if (shapeName === 'L') {\n      currentColor = 'p'\n      currentPiece = [[1, 3], [1, 4], [1, 5], [0, 5]]\n\n    }\n    else if (shapeName === 'T') {\n      currentColor = 'v'\n      currentPiece = [[1, 3], [1, 4], [1, 5], [0, 4]]\n    }\n    for (let i = 0; i < currentPiece.length; i++) {\n      boardCopy[currentPiece[i][0]][currentPiece[i][1]] = currentColor + 'm'\n    }\n    this.setState({\n      previousBoards : this.trackBoard(boardCopy),\n      board: boardCopy,\n      currentPiece: currentPiece,\n      currentColor: currentColor\n    }, () => {\n      if (!this.state.gameBegun) {\n        this.setState({ gameBegun: true }, () => {\n          this.controlGravity('start')\n        })\n      }\n    })\n  };\n\n  gravity = () => {\n    // i.e., is the current piece allowed to descend, or is something in the way\n    let allowed = true;\n\n    if (this.checkForFloor() || this.checkForBlocksBeneath()) {\n      this.getRandomPiece();\n      allowed = false;\n    }\n\n    if (allowed) {\n      let boardCopy = this.state.board.map(row => row.slice());\n      let currentPieceCopy = this.state.currentPiece.map(piece => piece.slice());\n      //mark all the spaces corresponding to the current piece to empty\n      for (let i = 0; i < currentPieceCopy.length; i++) {\n        boardCopy[currentPieceCopy[i][0]][currentPieceCopy[i][1]] = 'e'\n      }\n      //change all the spaces below current piece to the values of current piece\n      for (let i = 0; i < currentPieceCopy.length; i++) {\n        if (currentPieceCopy[i][0] + 1 < 18) {\n          boardCopy[currentPieceCopy[i][0] + 1][currentPieceCopy[i][1]] = this.state.currentColor + 'm';\n        }\n      }\n      //update the state of current piece\n      for (let i = 0; i < currentPieceCopy.length; i++) {\n        currentPieceCopy[i][0] = currentPieceCopy[i][0] + 1\n      }\n      //merge these changes into state\n      this.setState({\n        previousBoards : this.trackBoard(boardCopy),\n        board: boardCopy,\n        currentPiece: currentPieceCopy\n      })\n    }\n    if (!this.state.stopped) {\n      this.controlGravity('start')\n    }\n  }\n\n  controlGravity = (command) => {\n    let gravityTimeout;\n    switch (command) {\n      case \"start\": gravityTimeout = setTimeout(this.gravity, this.state.gravitySpeed); break;\n      case \"stop\": clearTimeout(gravityTimeout); break;\n      default: console.log('ERR: called controlGravity without \"stop\" or \"start\"')\n    }\n  }\n\n  checkForFloor = () => {\n    for (let i = 0; i < this.state.currentPiece.length; i++) {\n      if (!this.state.board[this.state.currentPiece[i][0] + 1]) {\n        return true\n      }\n    }\n  }\n  checkForBlocksBeneath = () => {\n    for (let i = 0; i < this.state.currentPiece.length; i++) {\n      if (\n        //there is a row below\n        this.state.board[this.state.currentPiece[i][0] + 1]\n        &&\n        //the square below is not empty\n        this.state.board[this.state.currentPiece[i][0] + 1][this.state.currentPiece[i][1]] !== 'e'\n        &&\n        // the square below is not part of the current piece\n        this.state.board[this.state.currentPiece[i][0] + 1][this.state.currentPiece[i][1]] !== this.state.currentColor + 'm'\n      ) {\n        return true\n      }\n    }\n  }\n  checkForBlocksRight = () => {\n    for (let i = 0; i < this.state.currentPiece.length; i++) {\n      if (\n        this.state.board[this.state.currentPiece[i][0]][this.state.currentPiece[i][1] + 1] !== 'e'\n        &&\n        this.state.board[this.state.currentPiece[i][0]][this.state.currentPiece[i][1] + 1] !== this.state.currentColor + 'm') {\n        return true\n      }\n    }\n  }\n  checkForBlocksLeft = () => {\n    for (let i = 0; i < this.state.currentPiece.length; i++) {\n      if (\n        this.state.board[this.state.currentPiece[i][0]][this.state.currentPiece[i][1] - 1] !== 'e'\n        &&\n        this.state.board[this.state.currentPiece[i][0]][this.state.currentPiece[i][1] - 1] !== this.state.currentColor + 'm') {\n        return true\n      }\n    }\n  }\n\n\n\n  clearMs = () => {\n    let boardCopy = this.state.board.map(row => row.slice());\n    for (let i = 0; i <= 17; i++) {\n      for (let j = 0; j <= 9; j++) {\n        if (boardCopy[i][j].includes('m')) {\n          boardCopy[i][j] = boardCopy[i][j].replace('m', '')\n        }\n      }\n    }\n    this.setState({\n      previousBoards : this.trackBoard(boardCopy),\n      board: boardCopy\n    })\n  }\n  checkForGameOver = () => {\n    let topRow = this.state.board[0];\n    for (let i = 0; i < topRow.length; i++) {\n      if (!topRow[i].includes('e')) {\n        if (!topRow[i].includes('m')) {\n          this.stop();\n          this.gameOver();\n          return;\n        }\n      }\n    }\n  }\n\n  gameOver = () => {\n    this.setState({ \n      gameOver: true, \n    })\n    this.stop();\n  }\n  moveLeft = () => {\n    let allowed = true;\n    let boardCopy = this.state.board.map(row => row.slice());\n    let currentPieceCopy = this.state.currentPiece.map(piece => piece.slice());\n    //If either the 'wall' or another piece is in the way\n    for (let i = 0; i < currentPieceCopy.length; i++)\n      if (!boardCopy[currentPieceCopy[i][0]][currentPieceCopy[i][1] - 1]\n        ||\n        this.checkForBlocksLeft()\n      ) {\n        allowed = false\n      }\n    if (allowed) {\n      //empty out current position of current piece\n      for (let i = 0; i < currentPieceCopy.length; i++) {\n        boardCopy[currentPieceCopy[i][0]][currentPieceCopy[i][1]] = 'e'\n      }\n      //move those pieces left one place\n      for (let i = 0; i < currentPieceCopy.length; i++) {\n        boardCopy[currentPieceCopy[i][0]][currentPieceCopy[i][1] - 1] = this.state.currentColor + 'm'\n      }\n      //alter current piece to match new \n      for (let i = 0; i < currentPieceCopy.length; i++) {\n        currentPieceCopy[i][1] = currentPieceCopy[i][1] - 1\n      }\n      this.setState({\n        previousBoards : this.trackBoard(boardCopy),\n        board: boardCopy,\n        currentPiece: currentPieceCopy\n      })\n    }\n  }\n  moveRight = () => {\n    let allowed = true;\n    let boardCopy = this.state.board.map(row => row.slice());\n    let currentPieceCopy = this.state.currentPiece.map(piece => piece.slice());\n\n    for (let i = 0; i < currentPieceCopy.length; i++) {\n      if (!boardCopy[currentPieceCopy[i][0]][currentPieceCopy[i][1] + 1]\n        ||\n        this.checkForBlocksRight()\n      ) {\n        allowed = false\n      }\n    }\n    if (allowed) {\n      for (let i = 0; i < currentPieceCopy.length; i++) {\n        boardCopy[currentPieceCopy[i][0]][currentPieceCopy[i][1]] = 'e'\n      }\n      for (let i = 0; i < currentPieceCopy.length; i++) {\n        boardCopy[currentPieceCopy[i][0]][currentPieceCopy[i][1] + 1] = this.state.currentColor + 'm'\n      }\n      for (let i = 0; i < currentPieceCopy.length; i++) {\n        currentPieceCopy[i][1] = currentPieceCopy[i][1] + 1\n      }\n    }\n    this.setState({\n      previousBoards : this.trackBoard(boardCopy),\n      board: boardCopy,\n      currentPiece: currentPieceCopy\n    })\n\n  }\n\n  moveDown = () => {\n    let allowed = true;\n    let boardCopy = this.state.board.map(row => row.slice());\n    let currentPieceCopy = this.state.currentPiece.map(piece => piece.slice());\n\n    for (let i = 0; i < currentPieceCopy.length; i++)\n      if (!boardCopy[currentPieceCopy[i][0] + 1]\n        ||\n        this.checkForBlocksBeneath()\n      ) {\n        allowed = false\n      }\n    if (allowed) {\n      for (let i = 0; i < currentPieceCopy.length; i++) {\n        boardCopy[currentPieceCopy[i][0]][currentPieceCopy[i][1]] = 'e'\n      }\n      for (let i = 0; i < currentPieceCopy.length; i++) {\n        boardCopy[currentPieceCopy[i][0] + 1][currentPieceCopy[i][1]] = this.state.currentColor + 'm'\n      }\n      for (let i = 0; i < currentPieceCopy.length; i++) {\n        currentPieceCopy[i][0] = currentPieceCopy[i][0] + 1\n      }\n    }\n    this.setState({\n      previousBoards : this.trackBoard(boardCopy),\n      board: boardCopy,\n      currentPiece: currentPieceCopy\n    })\n  }\n\n  rotate = (rotation) => {\n    let boardCopy = this.state.board.map(row => row.slice());\n    let currentPieceCopy = this.state.currentPiece.map(piece => piece.slice());\n    let rotationCopy;\n\n    if (this.state.currentPieceName === 'O') {\n      //this piece does not rotate\n    } else if (this.state.currentPieceName === 'I') {\n      switch (rotation) {\n        case 1: (function () {\n          rotationCopy = 2;\n          currentPieceCopy[0][0] += -1;\n          currentPieceCopy[0][1] += 1;\n          currentPieceCopy[1][0] += 0;\n          currentPieceCopy[1][1] += 0;\n          currentPieceCopy[2][0] += 1;\n          currentPieceCopy[2][1] += -1;\n          currentPieceCopy[3][0] += 2;\n          currentPieceCopy[3][1] += -2;\n        })();\n          break;\n        case 2: (() => {\n          rotationCopy = 3;\n          currentPieceCopy[0][0] += 1;\n          currentPieceCopy[0][1] += 1;\n          currentPieceCopy[1][0] += 0;\n          currentPieceCopy[1][1] += 0;\n          currentPieceCopy[2][0] += -1;\n          currentPieceCopy[2][1] += -1;\n          currentPieceCopy[3][0] += -2;\n          currentPieceCopy[3][1] += -2;\n        })();\n          break;\n        case 3: (() => {\n          rotationCopy = 4;\n          currentPieceCopy[0][0] += 1;\n          currentPieceCopy[0][1] += -1;\n          currentPieceCopy[1][0] += 0;\n          currentPieceCopy[1][1] += 0;\n          currentPieceCopy[2][0] += -1;\n          currentPieceCopy[2][1] += 1;\n          currentPieceCopy[3][0] += -2;\n          currentPieceCopy[3][1] += 2;\n        })();\n          break;\n        case 4: (() => {\n          rotationCopy = 1;\n          currentPieceCopy[0][0] += -1;\n          currentPieceCopy[0][1] += -1;\n          currentPieceCopy[1][0] += 0;\n          currentPieceCopy[1][1] += 0;\n          currentPieceCopy[2][0] += 1;\n          currentPieceCopy[2][1] += 1;\n          currentPieceCopy[3][0] += 2;\n          currentPieceCopy[3][1] += 2;\n        })();\n          break;\n        default: console.log('there was a big problem');\n      }\n    } else if (this.state.currentPieceName === 'S') {\n      switch (rotation) {\n        case 1: (function () {\n          rotationCopy = 2;\n          currentPieceCopy[0][0] += 1;\n          currentPieceCopy[0][1] += 1;\n          currentPieceCopy[1][0] += 2;\n          currentPieceCopy[1][1] += 0;\n          currentPieceCopy[2][0] += -1;\n          currentPieceCopy[2][1] += 1;\n          currentPieceCopy[3][0] += 0;\n          currentPieceCopy[3][1] += 0;\n        })();\n          break;\n        case 2: (() => {\n          rotationCopy = 3;\n          currentPieceCopy[0][0] += 1;\n          currentPieceCopy[0][1] += -1;\n          currentPieceCopy[1][0] += 0;\n          currentPieceCopy[1][1] += -2;\n          currentPieceCopy[2][0] += 1;\n          currentPieceCopy[2][1] += 1;\n          currentPieceCopy[3][0] += 0;\n          currentPieceCopy[3][1] += 0;\n        })();\n          break;\n        case 3: (() => {\n          rotationCopy = 4;\n          currentPieceCopy[0][0] += -1;\n          currentPieceCopy[0][1] += -1;\n          currentPieceCopy[1][0] += -2;\n          currentPieceCopy[1][1] += 0;\n          currentPieceCopy[2][0] += 1;\n          currentPieceCopy[2][1] += -1;\n          currentPieceCopy[3][0] += 0;\n          currentPieceCopy[3][1] += 0;\n        })();\n          break;\n        case 4: (() => {\n          rotationCopy = 1;\n          currentPieceCopy[0][0] += -1;\n          currentPieceCopy[0][1] += 1;\n          currentPieceCopy[1][0] += 0;\n          currentPieceCopy[1][1] += 2;\n          currentPieceCopy[2][0] += -1;\n          currentPieceCopy[2][1] += -1;\n          currentPieceCopy[3][0] += 0;\n          currentPieceCopy[3][1] += 0;\n        })();\n          break;\n        default: console.log('there was a big problem');\n      }\n    } else if (this.state.currentPieceName === 'Z') {\n      switch (rotation) {\n        case 1: (function () {\n          rotationCopy = 2;\n          currentPieceCopy[0][0] += 0;\n          currentPieceCopy[0][1] += 2;\n          currentPieceCopy[1][0] += 1;\n          currentPieceCopy[1][1] += 1;\n          currentPieceCopy[2][0] += 0;\n          currentPieceCopy[2][1] += 0;\n          currentPieceCopy[3][0] += 1;\n          currentPieceCopy[3][1] += -1;\n        })();\n          break;\n        case 2: (() => {\n          rotationCopy = 3;\n          currentPieceCopy[0][0] += 2;\n          currentPieceCopy[0][1] += 0;\n          currentPieceCopy[1][0] += 1;\n          currentPieceCopy[1][1] += -1;\n          currentPieceCopy[2][0] += 0;\n          currentPieceCopy[2][1] += 0;\n          currentPieceCopy[3][0] += -1;\n          currentPieceCopy[3][1] += -1;\n        })();\n          break;\n        case 3: (() => {\n          rotationCopy = 4;\n          currentPieceCopy[0][0] += 0;\n          currentPieceCopy[0][1] += -2;\n          currentPieceCopy[1][0] += -1;\n          currentPieceCopy[1][1] += -1;\n          currentPieceCopy[2][0] += 0;\n          currentPieceCopy[2][1] += 0;\n          currentPieceCopy[3][0] += -1;\n          currentPieceCopy[3][1] += 1;\n        })();\n          break;\n        case 4: (() => {\n          rotationCopy = 1;\n          currentPieceCopy[0][0] += -2;\n          currentPieceCopy[0][1] += 0;\n          currentPieceCopy[1][0] += -1;\n          currentPieceCopy[1][1] += 1;\n          currentPieceCopy[2][0] += 0;\n          currentPieceCopy[2][1] += 0;\n          currentPieceCopy[3][0] += 1;\n          currentPieceCopy[3][1] += 1;\n        })();\n          break;\n        default: console.log('there was a big problem');\n      }\n    } else if (this.state.currentPieceName === 'L') {\n      switch (rotation) {\n        case 1: (function () {\n          rotationCopy = 2;\n          currentPieceCopy[0][0] += -1;\n          currentPieceCopy[0][1] += 1;\n          currentPieceCopy[1][0] += 0;\n          currentPieceCopy[1][1] += 0;\n          currentPieceCopy[2][0] += 1;\n          currentPieceCopy[2][1] += -1;\n          currentPieceCopy[3][0] += 2;\n          currentPieceCopy[3][1] += 0;\n        })();\n          break;\n        case 2: (() => {\n          rotationCopy = 3;\n          currentPieceCopy[0][0] += 1;\n          currentPieceCopy[0][1] += 1;\n          currentPieceCopy[1][0] += 0;\n          currentPieceCopy[1][1] += 0;\n          currentPieceCopy[2][0] += -1;\n          currentPieceCopy[2][1] += -1;\n          currentPieceCopy[3][0] += 0;\n          currentPieceCopy[3][1] += -2;\n        })();\n          break;\n        case 3: (() => {\n          rotationCopy = 4;\n          currentPieceCopy[0][0] += 1;\n          currentPieceCopy[0][1] += -1;\n          currentPieceCopy[1][0] += 0;\n          currentPieceCopy[1][1] += 0;\n          currentPieceCopy[2][0] += -1;\n          currentPieceCopy[2][1] += 1;\n          currentPieceCopy[3][0] += -2;\n          currentPieceCopy[3][1] += 0;\n        })();\n          break;\n        case 4: (() => {\n          rotationCopy = 1;\n          currentPieceCopy[0][0] += -1;\n          currentPieceCopy[0][1] += -1;\n          currentPieceCopy[1][0] += 0;\n          currentPieceCopy[1][1] += 0;\n          currentPieceCopy[2][0] += 1;\n          currentPieceCopy[2][1] += 1;\n          currentPieceCopy[3][0] += 0;\n          currentPieceCopy[3][1] += 2;\n        })();\n          break;\n        default: console.log('there was a big problem');\n      }\n    } else if (this.state.currentPieceName === 'J') {\n      switch (rotation) {\n        case 1: (function () {\n          rotationCopy = 2;\n          currentPieceCopy[0][0] += -1;\n          currentPieceCopy[0][1] += 1;\n          currentPieceCopy[1][0] += 0;\n          currentPieceCopy[1][1] += 0;\n          currentPieceCopy[2][0] += 1;\n          currentPieceCopy[2][1] += -1;\n          currentPieceCopy[3][0] += 0;\n          currentPieceCopy[3][1] += 2;\n        })();\n          break;\n        case 2: (() => {\n          rotationCopy = 3;\n          currentPieceCopy[0][0] += 1;\n          currentPieceCopy[0][1] += 1;\n          currentPieceCopy[1][0] += 0;\n          currentPieceCopy[1][1] += 0;\n          currentPieceCopy[2][0] += -1;\n          currentPieceCopy[2][1] += -1;\n          currentPieceCopy[3][0] += 2;\n          currentPieceCopy[3][1] += 0;\n        })();\n          break;\n        case 3: (() => {\n          rotationCopy = 4;\n          currentPieceCopy[0][0] += 1;\n          currentPieceCopy[0][1] += -1;\n          currentPieceCopy[1][0] += 0;\n          currentPieceCopy[1][1] += 0;\n          currentPieceCopy[2][0] += -1;\n          currentPieceCopy[2][1] += 1;\n          currentPieceCopy[3][0] += 0;\n          currentPieceCopy[3][1] += -2;\n        })();\n          break;\n        case 4: (() => {\n          rotationCopy = 1;\n          currentPieceCopy[0][0] += -1;\n          currentPieceCopy[0][1] += -1;\n          currentPieceCopy[1][0] += 0;\n          currentPieceCopy[1][1] += 0;\n          currentPieceCopy[2][0] += 1;\n          currentPieceCopy[2][1] += 1;\n          currentPieceCopy[3][0] += -2;\n          currentPieceCopy[3][1] += 0;\n        })();\n          break;\n        default: console.log('there was a big problem');\n      }\n\n    } else if (this.state.currentPieceName === 'T') {\n      switch (rotation) {\n        case 1: (function () {\n          rotationCopy = 2;\n          currentPieceCopy[0][0] += -1;\n          currentPieceCopy[0][1] += 1;\n          currentPieceCopy[1][0] += 0;\n          currentPieceCopy[1][1] += 0;\n          currentPieceCopy[2][0] += 1;\n          currentPieceCopy[2][1] += -1;\n          currentPieceCopy[3][0] += 1;\n          currentPieceCopy[3][1] += 1;\n        })();\n          break;\n        case 2: (() => {\n          rotationCopy = 3;\n          currentPieceCopy[0][0] += 1;\n          currentPieceCopy[0][1] += 1;\n          currentPieceCopy[1][0] += 0;\n          currentPieceCopy[1][1] += 0;\n          currentPieceCopy[2][0] += -1;\n          currentPieceCopy[2][1] += -1;\n          currentPieceCopy[3][0] += 1;\n          currentPieceCopy[3][1] += -1;\n        })();\n          break;\n        case 3: (() => {\n          rotationCopy = 4;\n          currentPieceCopy[0][0] += 1;\n          currentPieceCopy[0][1] += -1;\n          currentPieceCopy[1][0] += 0;\n          currentPieceCopy[1][1] += 0;\n          currentPieceCopy[2][0] += -1;\n          currentPieceCopy[2][1] += 1;\n          currentPieceCopy[3][0] += -1;\n          currentPieceCopy[3][1] += -1;\n        })();\n          break;\n        case 4: (() => {\n          rotationCopy = 1;\n          currentPieceCopy[0][0] += -1;\n          currentPieceCopy[0][1] += -1;\n          currentPieceCopy[1][0] += 0;\n          currentPieceCopy[1][1] += 0;\n          currentPieceCopy[2][0] += 1;\n          currentPieceCopy[2][1] += 1;\n          currentPieceCopy[3][0] += -1;\n          currentPieceCopy[3][1] += 1;\n        })();\n          break;\n        default: console.log('there was a big problem');\n      }\n    }\n\n\n    if (this.rotationAllowed(currentPieceCopy)) {\n      for (let i = 0; i < this.state.currentPiece.length; i++) {\n        boardCopy[this.state.currentPiece[i][0]][this.state.currentPiece[i][1]] = 'e'\n      }\n      for (let i = 0; i < currentPieceCopy.length; i++) {\n        boardCopy[currentPieceCopy[i][0]][currentPieceCopy[i][1]] = this.state.currentColor + 'm'\n      }\n      this.setState({\n        previousBoards : this.trackBoard(boardCopy),\n        board: boardCopy,\n        currentPiece: currentPieceCopy,\n        rotation: rotationCopy\n      })\n\n    }\n  }\n\n  rotationAllowed = (hypotheticalPiece) => {\n    let wontHitWalls = true;\n    let wontHitBlocks = true;\n\n    for (let i = 0; i < hypotheticalPiece.length; i++) {\n      if (hypotheticalPiece[i][0] < 0) {\n        wontHitWalls = false\n      } if (hypotheticalPiece[i][0] > 17) {\n        wontHitWalls = false\n      } if (hypotheticalPiece[i][1] < 0) {\n        wontHitWalls = false\n      } if (hypotheticalPiece[i][1] > 9) {\n        wontHitWalls = false\n      }\n    }\n\n    //this is an (inelegant) fix; will fail otherwise.\n    if (!wontHitWalls) {\n      return false\n    }\n\n    for (let i = 0; i < hypotheticalPiece.length; i++) {\n      if (this.state.board[hypotheticalPiece[i][0]][[hypotheticalPiece[i][1]]] !== 'e') {\n        if (this.state.board[hypotheticalPiece[i][0]][[hypotheticalPiece[i][1]]] !== this.state.currentColor + 'm') {\n          wontHitBlocks = false;\n        }\n      }\n    }\n    return (wontHitWalls && wontHitBlocks)\n  }\n\n  checkForFullRows = () => {\n    let fullRowArray = [];\n    for (let i = 0; i < this.state.board.length; i++) {\n      if (!this.state.board[i].includes('e')) {\n        fullRowArray.push(i)\n      }\n    }\n    if (fullRowArray.length > 0) {\n      let newSpeed;\n      if (this.state.gravitySpeed < 60){\n        newSpeed = 60;\n      } else {\n        newSpeed = this.state.gravitySpeed - (fullRowArray.length * 10)\n      }\n      this.setState({\n        score: this.state.score + (fullRowArray.length * fullRowArray.length),\n        gravitySpeed: newSpeed\n      })\n      this.colorFullRow(fullRowArray)\n    }\n  }\n  colorFullRow = (array) => {\n    let boardCopy = this.state.board.map(row => row.slice());\n    for (let i = 0; i < array.length; i++) {\n      for (let j = 0; j < 10; j++) {\n        boardCopy[array[i]][j] = 'e'\n      }\n    }\n    this.setState({ \n      previousBoards : this.trackBoard(boardCopy),\n      board: boardCopy \n    })\n    setTimeout(() => {\n      this.shiftBlocksDown(array);\n    }, 400)\n  }\n  shiftBlocksDown = (array) => {\n    let boardCopy = this.state.board.map(row => row.slice());\n    // array is an array of in indices of full rows.\n    //begginning with the row above the lowest full row, shift the values of each row down one. If there are multiple full rows, repeat.\n    for (let i = 0; i < array.length; i++) {\n      for (let j = array[i]; j > -1; j--) {\n        if (j === 0) {\n          boardCopy[j] = ['e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e']\n        } else {\n          // old: boardCopy[j] = boardCopy[j - 1]\n          for (let k = 0; k < 10; k++) {\n            if (!boardCopy[j - 1][k].includes('m') && !boardCopy[j][k].includes('m')) {\n              boardCopy[j][k] = boardCopy[j - 1][k]\n            }\n          }\n        }\n      }\n    }\n    this.setState({\n      previousBoards : this.trackBoard(boardCopy), \n      board: boardCopy \n    })\n  }\n  submitCheck = ()=>{\n    fetch('/states', {\n      method: \"GET\",\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    })\n    .then((response) => {return response.json()})\n    .then((json) => {this.setState({savedStates : json})})\n    .then(() => {\n        if (this.isHighestScore()){\n          this.trimTo1000AndSubmit()\n        } else if (this.isHighScore()){\n          this.trimAndSubmit();\n        } else {\n          this.scoreState();\n          this.controlTimeWarp('start');\n      }\n    })\n  }\n    isHighestScore = () =>{\n      if (this.state.score >= this.state.savedStates[0].score){\n        return true;\n      } else {\n        return false;\n      }\n    }\n    isHighScore = () =>{\n      let highScore = false;\n      for (let i = 0; i < 5; i++){\n        if (this.state.score >= this.state.savedStates[i].score){\n          highScore = true;\n        }\n      }\n      return highScore;\n    }\n    trimAndSubmit = () => {\n      this.setState({\n        previousBoards : 'deleted'\n      }, ()=>{\n        this.submit();\n        // this.scoreState();\n      })\n    }\n    trimTo1000AndSubmit = () => {\n      let thousandIndices = [];\n      for (let i = 0; i < 800; i++){\n        thousandIndices.push(this.state.previousBoards[i])\n      }\n      this.setState({\n        previousBoards: thousandIndices\n      }, () => {\n       this.submit();\n    })\n    }\n\n  submit = () => {\n    if(this.state.name !== ''){\n    fetch('/', {\n      method: \"POST\",\n      body: JSON.stringify({\n        name : this.state.name,\n        score : this.state.score,\n        board: this.state.board,\n        previousBoards : this.state.previousBoards\n      }),\n      headers: {\n        // 'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n    })\n    // .then(response => {\n    //   response.json()\n    .then(()=>{\n      this.getScores();\n    })\n  }\n}\nscoreState = () =>{\n  this.setState({\n    showScores : true\n  })\n}\ngetScores = () => {\n  fetch('/states', {\n    method: \"GET\",\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    }\n  })\n  .then((response) => {return response.json()})\n  .then((json) => {this.setState({savedStates : json},\n    ()=>{\n      this.controlTimeWarp('start')\n      this.scoreState()\n    }\n    )})\n}\n\n  handleChange = (e) => {\n    this.setState({ name: e.target.value })\n  }\n\n  trackBoard = (boardCopy) => {\n    let previousBoardsCopy = this.state.previousBoards.map(row => row.slice())\n    previousBoardsCopy.push(boardCopy)\n    return previousBoardsCopy\n  }\n  moveTimeWarpIndex = () => {\n      let plusOne = this.state.timeWarpIndex + 1;\n      if (plusOne === this.state.savedStates[0].previousBoards.length){\n        this.setState({timeWarpIndex : 1})\n      } else {\n      this.setState({timeWarpIndex: plusOne})\n      }\n  }\n  controlTimeWarp = (command) => {\n    let interval;\n    if(command === 'start'){\n      interval = setInterval(this.moveTimeWarpIndex, 140)\n    } else if (command === 'stop') {\n      clearInterval(interval);\n    }\n  }\n\n  render() {\n    \n    return (\n      <div>\n        {/* <Loader\n          showScores={this.state.showScores} \n          gameOver={this.state.gameOver}\n        /> */}\n        <ScoreBoard \n          showScores={this.state.showScores} \n          savedStates = {this.state.savedStates}\n          index = {this.state.timeWarpIndex}\n          // previousBoards = {this.state.previousBoards}\n          />\n        <GameOver \n          id=\"gameOver\" \n          showScores={this.state.showScores} \n          score={this.state.score} \n          gameOver={this.state.gameOver} />\n        <Form \n          gameOver={this.state.gameOver} \n          showScores={this.state.showScores} \n          handleClick={this.submitCheck} \n          nameValue={this.state.name} \n          handleChange={this.handleChange} />\n        <Display\n          state={this.state}\n          makeRow={this.makeRow}\n          stop={this.stop}\n          start={this.start}\n          endGame={this.submitCheck}\n          />\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}