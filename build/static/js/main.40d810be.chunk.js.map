{"version":3,"sources":["Square/Square.js","GameOver/GameOver.js","Form/Form.js","ScoreBoard/ScoreBoard.js","Display/Display.js","App.js","serviceWorker.js","index.js"],"names":["Square","props","getSize","key","style","backgroundColor","getColor","colorKey","height","sizeKey","width","react_default","a","createElement","color","opacity","divStyle","marginBlockStart","marginBlockEnd","fontSize","textAlign","position","top","left","border","borderRadius","paddingTop","GameOver","gameOver","showScores","score","inputStyle","buttonStyle","marginTop","cursor","Form","render","_this","type","maxLength","onChange","e","handleChange","value","nameValue","onClick","handleClick","Component","rankStyle","display","marginRight","marginLeft","nameStyle","maxWidth","marginBottom","scoreStyle","tableStyle","margin","containerStyle","flexDirection","justifyContent","columnStyle","padding","alignContent","alignItems","boardStyle","flexWrap","titleStyle","linkStyle","ScoreBoard","makeRow","num","i","src_Square_Square","savedStates","board","makeTimeWarpRow","index","previousBoards","makeCard","rank","crown","name","href","Display","state","id","gravitySpeed","start","stop","endGame","App","currentPiece","currentPieceName","currentColor","gameBegun","stopped","rotation","timeWarpIndex","keyRouter","moveLeft","moveRight","moveDown","rotate","window","addEventListener","setState","controlGravity","getRandomPiece","removeEventListener","random","Math","floor","generatePiece","shapeName","clearMs","checkForFullRows","checkForGameOver","boardCopy","map","row","slice","length","trackBoard","gravity","allowed","checkForFloor","checkForBlocksBeneath","currentPieceCopy","piece","command","gravityTimeout","setTimeout","clearTimeout","console","log","checkForBlocksRight","checkForBlocksLeft","j","includes","replace","topRow","rotationCopy","rotationAllowed","hypotheticalPiece","wontHitWalls","wontHitBlocks","fullRowArray","push","colorFullRow","array","shiftBlocksDown","k","submitCheck","fetch","method","headers","Accept","Content-Type","then","response","json","isHighestScore","submit","isHighScore","trimAndSubmit","scoreState","highScore","body","JSON","stringify","data","getScores","controlTimeWarp","target","previousBoardsCopy","moveTimeWarpIndex","plusOne","interval","setInterval","clearInterval","src_ScoreBoard_ScoreBoard","this","src_GameOver_GameOver","src_Form_Form","src_Display_Display","Boolean","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.40d810be.chunk.js","sourcesContent":["import React from 'react'\n\nconst Square = (props) => {\n    function getColor(key){\n\t\tswitch(key[0]) {\n            case \"e\" : return 'grey';\n            case \"y\" : return 'yellow';\n\t\t\t      case \"b\" : return 'blue';\n\t\t\t      case \"r\" : return 'red';\n\t\t\t      case \"g\" : return 'green';\n            case 'o' : return 'orange';\n            case 'p' : return 'purple';\n            case 'v' : return 'violet';\n            case 'w' : return 'white';\n            default : return 'grey';\t\n\t\t}\n  }\n  function getSize(key){\n    if (key === 'small'){ \n      return '8px'\n    } else {\n      return '22px'\n    }\n  }\n\t\n\tlet style = {\n    backgroundColor: getColor(props.colorKey),\n    height: getSize(props.sizeKey),\n    width: getSize(props.sizeKey)\n\t\t} \n\t\n\n  return(\n    <td style={style}></td>\n  );\n\n}\n\nexport default Square;","import React from 'react';\n\nconst style = {\n    color: 'white',\n    opacity: '1'\n  }\n  const divStyle = {\n    marginBlockStart: '10px',\n    marginBlockEnd: '10px',\n    backgroundColor: 'rgba(0,0,0,.8)',\n    color: 'white',\n    fontSize: '50px',\n    width:'90%',\n    height:'110%',\n    textAlign: 'center',\n    // margin: 'auto',\n    position: 'absolute',\n    top: '3%',\n    left: '4.5%',\n    border: '3px solid white',\n    borderRadius: '20px',\n    paddingTop: '5%'\n  }\n\nconst GameOver = (props) =>{\n    let message;\n    if (props.gameOver && !props.showScores){\n        message = <div style={divStyle}>\n        <h1 style={style}>GAME OVER</h1>\n        <h3>Final Score: {props.score}</h3>\n        <h4>Enter Your name</h4>\n        </div>\n\n    } else {\n        message = null\n    }\n    return message\n}\n\n\n\nexport default GameOver;","import React, { Component } from 'react';\n\nconst style  = {\n    textAlign: 'center',\n    position: 'Absolute',\n    width: '20%',\n    left: '40%',\n    top: '100%'\n}\nconst inputStyle = {\n    border : '2px solid white',\n    backgroundColor : 'rgba(0,0,0,.8)',\n    height: '50px',\n    width: '250px',\n    color: 'white',\n    fontSize: '30px',\n    borderRadius: '5px',\n    textAlign: 'center',\n}\nconst buttonStyle = {\n    height: '50px',\n    width: '250px',\n    marginTop: '10px',\n    fontSize: '20px',\n    borderRadius: '5px',\n    cursor: 'pointer',\n    border: '3px solid black'\n\n}\n\nclass Form extends Component {\n    render = (props) => {\n        if (this.props.gameOver & !this.props.showScores){\n        return (\n            <div style={style}>\n                <input style={inputStyle} type=\"text\" maxLength=\"13\" onChange={(e) => this.props.handleChange(e)} value={this.props.nameValue} />\n                <button style={buttonStyle} onClick={this.props.handleClick}>Submit</button>\n            </div>\n        );\n        } else {\n            return null;\n        }\n    }   \n}\n\nexport default Form;","import React from 'react'\nimport Square from '../Square/Square'\n\nconst rankStyle = {\n    display: 'inline',\n    fontSize: '60px',\n    marginRight: '10px',\n    marginLeft: '25px',\n    textAlign: 'center'\n}\nconst nameStyle = {\n    display: 'inline',\n    fontSize: '35px',\n    maxWidth: '90%',\n    marginBottom: '10px',\n    marginTop: '10px'\n}\nconst scoreStyle = {\n    marginTop: '0px',\n    display: 'inline',\n    marginBottom: '15px',\n}\nconst tableStyle = {\n    display: 'inline',\n    margin: 'auto',\n}\nconst containerStyle = {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    width: '100%',\n}\nconst columnStyle = {\n    border: '3px solid black',\n    borderRadius: '20px',\n    margin: '20px 20px',\n    padding: '5px',\n    backgroundColor: 'white',\n    width: '20%',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-around',\n    alignContent: 'center',\n    alignItems: 'center',\n}\nconst boardStyle = {\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    padding: '50px',\n    paddingTop: '20px'\n}\nconst titleStyle = {\n    textAlign: 'center',\n    marginTop: '50px',\n    marginBottom: '20px'\n}\nconst linkStyle = {\n    textAlign: 'center',\n    marginBottom: '50px',\n    fontSize: '22px'\n}\n\nconst ScoreBoard = (props) => {\n    function makeRow(num, i) {\n        return (\n            <tr>\n                <Square sizeKey='small' colorKey={props.savedStates[i].board[num][0]} />\n                <Square sizeKey='small' colorKey={props.savedStates[i].board[num][1]} />\n                <Square sizeKey='small' colorKey={props.savedStates[i].board[num][2]} />\n                <Square sizeKey='small' colorKey={props.savedStates[i].board[num][3]} />\n                <Square sizeKey='small' colorKey={props.savedStates[i].board[num][4]} />\n                <Square sizeKey='small' colorKey={props.savedStates[i].board[num][5]} />\n                <Square sizeKey='small' colorKey={props.savedStates[i].board[num][6]} />\n                <Square sizeKey='small' colorKey={props.savedStates[i].board[num][7]} />\n                <Square sizeKey='small' colorKey={props.savedStates[i].board[num][8]} />\n                <Square sizeKey='small' colorKey={props.savedStates[i].board[num][9]} />\n            </tr>\n        )\n    }\n    function makeTimeWarpRow(num) {\n        let i = props.index - 1\n        // console.log(0, i)\n        // console.log(1, props)\n        // console.log(2, props.previousBoards)\n        // console.log(3, props.previousBoards[i])\n        // console.log(4, props.previousBoards[i][0])\n        // console.log(5, props.previousBoards[i][0][0])\n        return (\n            <tr>\n                <Square sizeKey='small' colorKey={props.savedStates[0].previousBoards[i][num][0]} />\n                <Square sizeKey='small' colorKey={props.savedStates[0].previousBoards[i][num][1]} />\n                <Square sizeKey='small' colorKey={props.savedStates[0].previousBoards[i][num][2]} />\n                <Square sizeKey='small' colorKey={props.savedStates[0].previousBoards[i][num][3]} />\n                <Square sizeKey='small' colorKey={props.savedStates[0].previousBoards[i][num][4]} />\n                <Square sizeKey='small' colorKey={props.savedStates[0].previousBoards[i][num][5]} />\n                <Square sizeKey='small' colorKey={props.savedStates[0].previousBoards[i][num][6]} />\n                <Square sizeKey='small' colorKey={props.savedStates[0].previousBoards[i][num][7]} />\n                <Square sizeKey='small' colorKey={props.savedStates[0].previousBoards[i][num][8]} />\n                <Square sizeKey='small' colorKey={props.savedStates[0].previousBoards[i][num][9]} />\n            </tr>\n        )\n\n    }\n    function makeCard(i, rank, crown) {\n        return (\n            <div style={columnStyle}>\n                <h1 style={nameStyle}>{crown + props.savedStates[i].name}</h1>\n                <div style={containerStyle}>\n                    <h1 style={rankStyle}>{rank}</h1>\n                    <table style={tableStyle}>\n                        <tbody>\n                            {makeRow(0, i)}\n                            {makeRow(1, i)}\n                            {makeRow(2, i)}\n                            {makeRow(3, i)}\n                            {makeRow(4, i)}\n                            {makeRow(5, i)}\n                            {makeRow(6, i)}\n                            {makeRow(7, i)}\n                            {makeRow(8, i)}\n                            {makeRow(9, i)}\n                            {makeRow(10, i)}\n                            {makeRow(11, i)}\n                            {makeRow(12, i)}\n                            {makeRow(13, i)}\n                            {makeRow(14, i)}\n                            {makeRow(15, i)}\n                            {makeRow(16, i)}\n                            {makeRow(17, i)}\n                        </tbody>\n                    </table>\n                </div>\n                <h1 style={scoreStyle}>{props.savedStates[i].score} points</h1>\n            </div>\n\n        )\n\n    }\n    function makeTimeWarp(i) {\n        return (\n            <table>\n                <tbody>\n                    {makeTimeWarpRow(0)}\n                    {makeTimeWarpRow(1)}\n                    {makeTimeWarpRow(2)}\n                    {makeTimeWarpRow(3)}\n                    {makeTimeWarpRow(4)}\n                    {makeTimeWarpRow(5)}\n                    {makeTimeWarpRow(6)}\n                    {makeTimeWarpRow(7)}\n                    {makeTimeWarpRow(8)}\n                    {makeTimeWarpRow(9)}\n                    {makeTimeWarpRow(10)}\n                    {makeTimeWarpRow(11)}\n                    {makeTimeWarpRow(12)}\n                    {makeTimeWarpRow(13)}\n                    {makeTimeWarpRow(14)}\n                    {makeTimeWarpRow(15)}\n                    {makeTimeWarpRow(16)}\n                    {makeTimeWarpRow(17)}\n                </tbody>\n            </table>\n        )\n    }\n    if (props.showScores) {\n\n        return (\n            <div>\n                <h1 style={titleStyle}>React TETRIS High Scores</h1>\n\n                <div style={boardStyle}>\n                    {/* {makeCard(0, '1st', '👑 ')} */}\n                    {makeTimeWarp()}\n\n                    {makeCard(1, '2nd', '')}\n                    {makeCard(2, '3rd', '')}\n                    {makeCard(3, '4th', '')}\n                    {makeCard(4, '5th', '')}\n                    {/* {makeCard(5, '6th', '')}\n                    {makeCard(6, '7th', '')}\n                    {makeCard(7, '8th', '')}\n                    {makeCard(8, '9th', '')}\n                    {makeCard(9, '10th', '')}\n                    {makeCard(10, '11th', '')}\n                    {makeCard(11, '12th', '')} */}\n                </div>\n                <a href='./'><p style={linkStyle}>Play Again?</p></a>\n                \n                {/* {makeTimeWarp()} */}\n            </div>\n        )\n    } else {\n        return null;\n    }\n}\n\n\n\nexport default ScoreBoard;\n","import React from 'react'\n\nconst Display = (props) => {\n    if (props.state.showScores){\n        return null\n    } else {\n        return (\n            <div id=\"content\">\n            <div id=\"innerDiv\">\n              <h1>TETRIS</h1> \n  \n              <p>Control pieces with W, A, S and D.</p>\n              <p>SCORE: {props.state.score} SPEED: {props.state.gravitySpeed} ms</p>\n              <button onClick={props.start}>Start</button>\n              <button onClick={props.stop}>Stop</button>\n              <button onClick={props.endGame}>Scores</button>\n\n              <table>\n                <tbody>\n                  {props.makeRow(0)}\n                  {props.makeRow(1)}\n                  {props.makeRow(2)}\n                  {props.makeRow(3)}\n                  {props.makeRow(4)}\n                  {props.makeRow(5)}\n                  {props.makeRow(6)}\n                  {props.makeRow(7)}\n                  {props.makeRow(8)}\n                  {props.makeRow(9)}\n                  {props.makeRow(10)}\n                  {props.makeRow(11)}\n                  {props.makeRow(12)}\n                  {props.makeRow(13)}\n                  {props.makeRow(14)}\n                  {props.makeRow(15)}\n                  {props.makeRow(16)}\n                  {props.makeRow(17)}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        )\n    }\n}\n\nexport default Display;","import React, { Component } from 'react';\nimport './App.css';\nimport Square from './Square/Square';\nimport GameOver from './GameOver/GameOver';\nimport Form from './Form/Form';\nimport ScoreBoard from './ScoreBoard/ScoreBoard';\nimport Display from './Display/Display';\n\n\nclass App extends Component {\n  state = {\n    // board: Array(18).fill(Array(10).fill('e')), DOESN'T WORK\n    board: [\n      ['e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e'],\n      ['e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e'],\n      ['e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e'],\n      ['e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e'],\n      ['e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e'],\n      ['e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e'],\n      ['e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e'],\n      ['e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e'],\n      ['e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e'],\n      ['e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e'],\n      ['e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e'],\n      ['e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e'],\n      ['e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e'],\n      ['e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e'],\n      ['e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e'],\n      ['e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e'],\n      ['e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e'],\n      ['e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e'],\n    ],\n    currentPiece: [],\n    currentPieceName: null,\n    currentColor: null,\n    gameBegun: false,\n    stopped: true,\n    gameOver: false,\n    showScores: false,\n    score: 0,\n    gravitySpeed: 500,\n    rotation: 1,\n    name: '',\n    savedStates : [],\n    previousBoards: [],\n    timeWarpIndex: 0\n  }\n\n  makeRow = (num) => {\n    return (\n      <tr>\n        <Square colorKey={this.state.board[num][0]} />\n        <Square colorKey={this.state.board[num][1]} />\n        <Square colorKey={this.state.board[num][2]} />\n        <Square colorKey={this.state.board[num][3]} />\n        <Square colorKey={this.state.board[num][4]} />\n        <Square colorKey={this.state.board[num][5]} />\n        <Square colorKey={this.state.board[num][6]} />\n        <Square colorKey={this.state.board[num][7]} />\n        <Square colorKey={this.state.board[num][8]} />\n        <Square colorKey={this.state.board[num][9]} />\n      </tr>\n    )\n  }\n  keyRouter = (e) => {\n    if (e.key === 'a') {\n      this.moveLeft();\n    } else if (e.key === 'd') {\n      this.moveRight();\n    } else if (e.key === 's') {\n      this.moveDown();\n    } else if (e.key === 'w') {\n      this.rotate(this.state.rotation);\n    }\n  }\n\n  start = () => {\n    window.addEventListener('keypress', this.keyRouter)\n    if (this.state.stopped) {\n      this.setState({ stopped: false })\n      this.controlGravity('start');\n    }\n    if (!this.state.gameBegun) {\n      // this.setState({gameBegun : true})\n      this.getRandomPiece();\n    }\n  }\n\n  stop = () => {\n    window.removeEventListener('keypress', this.keyRouter)\n    this.setState({ stopped: true })\n    this.controlGravity('stop')\n  }\n\n  getRandomPiece = () => {\n    const min = 0;\n    const max = 7;\n    const random = Math.floor(Math.random() * (max - min)) + min;\n\n    const pieceArray = ['O', 'I', 'S', 'Z', 'L', 'J', 'T']\n    this.generatePiece(pieceArray[random])\n    // this.generatePiece('I')\n  };\n\n  generatePiece = (shapeName) => {\n\n    this.setState({\n      currentPieceName: shapeName,\n      gameBegun: true,\n      rotation: 1\n    })\n\n    this.clearMs();\n    this.checkForFullRows();\n    this.checkForGameOver();\n\n    let boardCopy = this.state.board.map(row => row.slice());\n    let currentPiece;\n    let currentColor;\n\n    if (shapeName === 'O') {\n      currentColor = 'y';\n      currentPiece = [[0, 4], [0, 5], [1, 4], [1, 5]]\n    }\n    else if (shapeName === 'I') {\n      currentColor = 'b'\n      currentPiece = [[0, 3], [0, 4], [0, 5], [0, 6]]\n    }\n    else if (shapeName === 'S') {\n      currentColor = 'g'\n      currentPiece = [[0, 4], [0, 5], [1, 3], [1, 4]]\n    }\n    else if (shapeName === 'Z') {\n      currentColor = 'r'\n      currentPiece = [[0, 3], [0, 4], [1, 4], [1, 5]]\n\n    }\n    else if (shapeName === 'J') {\n      currentColor = 'o'\n      currentPiece = [[1, 3], [1, 4], [1, 5], [0, 3]]\n\n    }\n    else if (shapeName === 'L') {\n      currentColor = 'p'\n      currentPiece = [[1, 3], [1, 4], [1, 5], [0, 5]]\n\n    }\n    else if (shapeName === 'T') {\n      currentColor = 'v'\n      currentPiece = [[1, 3], [1, 4], [1, 5], [0, 4]]\n    }\n    for (let i = 0; i < currentPiece.length; i++) {\n      boardCopy[currentPiece[i][0]][currentPiece[i][1]] = currentColor + 'm'\n    }\n    this.setState({\n      previousBoards : this.trackBoard(boardCopy),\n      board: boardCopy,\n      currentPiece: currentPiece,\n      currentColor: currentColor\n    }, () => {\n      if (!this.state.gameBegun) {\n        this.setState({ gameBegun: true }, () => {\n          this.controlGravity('start')\n        })\n      }\n    })\n  };\n\n  gravity = () => {\n    // i.e., is the current piece allowed to descend, or is something in the way\n    let allowed = true;\n\n    if (this.checkForFloor() || this.checkForBlocksBeneath()) {\n      this.getRandomPiece();\n      allowed = false;\n    }\n\n    if (allowed) {\n      let boardCopy = this.state.board.map(row => row.slice());\n      let currentPieceCopy = this.state.currentPiece.map(piece => piece.slice());\n      //mark all the spaces corresponding to the current piece to empty\n      for (let i = 0; i < currentPieceCopy.length; i++) {\n        boardCopy[currentPieceCopy[i][0]][currentPieceCopy[i][1]] = 'e'\n      }\n      //change all the spaces below current piece to the values of current piece\n      for (let i = 0; i < currentPieceCopy.length; i++) {\n        if (currentPieceCopy[i][0] + 1 < 18) {\n          boardCopy[currentPieceCopy[i][0] + 1][currentPieceCopy[i][1]] = this.state.currentColor + 'm';\n        }\n      }\n      //update the state of current piece\n      for (let i = 0; i < currentPieceCopy.length; i++) {\n        currentPieceCopy[i][0] = currentPieceCopy[i][0] + 1\n      }\n      //merge these changes into state\n      this.setState({\n        previousBoards : this.trackBoard(boardCopy),\n        board: boardCopy,\n        currentPiece: currentPieceCopy\n      })\n    }\n    if (!this.state.stopped) {\n      this.controlGravity('start')\n    }\n  }\n\n  controlGravity = (command) => {\n    let gravityTimeout;\n    switch (command) {\n      case \"start\": gravityTimeout = setTimeout(this.gravity, this.state.gravitySpeed); break;\n      case \"stop\": clearTimeout(gravityTimeout); break;\n      default: console.log('ERR: called controlGravity without \"stop\" or \"start\"')\n    }\n  }\n\n  checkForFloor = () => {\n    for (let i = 0; i < this.state.currentPiece.length; i++) {\n      if (!this.state.board[this.state.currentPiece[i][0] + 1]) {\n        return true\n      }\n    }\n  }\n  checkForBlocksBeneath = () => {\n    for (let i = 0; i < this.state.currentPiece.length; i++) {\n      if (\n        //there is a row below\n        this.state.board[this.state.currentPiece[i][0] + 1]\n        &&\n        //the square below is not empty\n        this.state.board[this.state.currentPiece[i][0] + 1][this.state.currentPiece[i][1]] !== 'e'\n        &&\n        // the square below is not part of the current piece\n        this.state.board[this.state.currentPiece[i][0] + 1][this.state.currentPiece[i][1]] !== this.state.currentColor + 'm'\n      ) {\n        return true\n      }\n    }\n  }\n  checkForBlocksRight = () => {\n    for (let i = 0; i < this.state.currentPiece.length; i++) {\n      if (\n        this.state.board[this.state.currentPiece[i][0]][this.state.currentPiece[i][1] + 1] !== 'e'\n        &&\n        this.state.board[this.state.currentPiece[i][0]][this.state.currentPiece[i][1] + 1] !== this.state.currentColor + 'm') {\n        return true\n      }\n    }\n  }\n  checkForBlocksLeft = () => {\n    for (let i = 0; i < this.state.currentPiece.length; i++) {\n      if (\n        this.state.board[this.state.currentPiece[i][0]][this.state.currentPiece[i][1] - 1] !== 'e'\n        &&\n        this.state.board[this.state.currentPiece[i][0]][this.state.currentPiece[i][1] - 1] !== this.state.currentColor + 'm') {\n        return true\n      }\n    }\n  }\n\n\n\n  clearMs = () => {\n    let boardCopy = this.state.board.map(row => row.slice());\n    for (let i = 0; i <= 17; i++) {\n      for (let j = 0; j <= 9; j++) {\n        if (boardCopy[i][j].includes('m')) {\n          boardCopy[i][j] = boardCopy[i][j].replace('m', '')\n        }\n      }\n    }\n    this.setState({\n      previousBoards : this.trackBoard(boardCopy),\n      board: boardCopy\n    })\n  }\n  checkForGameOver = () => {\n    let topRow = this.state.board[0];\n    for (let i = 0; i < topRow.length; i++) {\n      if (!topRow[i].includes('e')) {\n        if (!topRow[i].includes('m')) {\n          this.stop();\n          this.gameOver();\n          return;\n        }\n      }\n    }\n  }\n\n  gameOver = () => {\n    this.setState({ \n      gameOver: true, \n    })\n    this.stop();\n  }\n  moveLeft = () => {\n    let allowed = true;\n    let boardCopy = this.state.board.map(row => row.slice());\n    let currentPieceCopy = this.state.currentPiece.map(piece => piece.slice());\n    //If either the 'wall' or another piece is in the way\n    for (let i = 0; i < currentPieceCopy.length; i++)\n      if (!boardCopy[currentPieceCopy[i][0]][currentPieceCopy[i][1] - 1]\n        ||\n        this.checkForBlocksLeft()\n      ) {\n        allowed = false\n      }\n    if (allowed) {\n      //empty out current position of current piece\n      for (let i = 0; i < currentPieceCopy.length; i++) {\n        boardCopy[currentPieceCopy[i][0]][currentPieceCopy[i][1]] = 'e'\n      }\n      //move those pieces left one place\n      for (let i = 0; i < currentPieceCopy.length; i++) {\n        boardCopy[currentPieceCopy[i][0]][currentPieceCopy[i][1] - 1] = this.state.currentColor + 'm'\n      }\n      //alter current piece to match new \n      for (let i = 0; i < currentPieceCopy.length; i++) {\n        currentPieceCopy[i][1] = currentPieceCopy[i][1] - 1\n      }\n      this.setState({\n        previousBoards : this.trackBoard(boardCopy),\n        board: boardCopy,\n        currentPiece: currentPieceCopy\n      })\n    }\n  }\n  moveRight = () => {\n    let allowed = true;\n    let boardCopy = this.state.board.map(row => row.slice());\n    let currentPieceCopy = this.state.currentPiece.map(piece => piece.slice());\n\n    for (let i = 0; i < currentPieceCopy.length; i++) {\n      if (!boardCopy[currentPieceCopy[i][0]][currentPieceCopy[i][1] + 1]\n        ||\n        this.checkForBlocksRight()\n      ) {\n        allowed = false\n      }\n    }\n    if (allowed) {\n      for (let i = 0; i < currentPieceCopy.length; i++) {\n        boardCopy[currentPieceCopy[i][0]][currentPieceCopy[i][1]] = 'e'\n      }\n      for (let i = 0; i < currentPieceCopy.length; i++) {\n        boardCopy[currentPieceCopy[i][0]][currentPieceCopy[i][1] + 1] = this.state.currentColor + 'm'\n      }\n      for (let i = 0; i < currentPieceCopy.length; i++) {\n        currentPieceCopy[i][1] = currentPieceCopy[i][1] + 1\n      }\n    }\n    this.setState({\n      previousBoards : this.trackBoard(boardCopy),\n      board: boardCopy,\n      currentPiece: currentPieceCopy\n    })\n\n  }\n\n  moveDown = () => {\n    let allowed = true;\n    let boardCopy = this.state.board.map(row => row.slice());\n    let currentPieceCopy = this.state.currentPiece.map(piece => piece.slice());\n\n    for (let i = 0; i < currentPieceCopy.length; i++)\n      if (!boardCopy[currentPieceCopy[i][0] + 1]\n        ||\n        this.checkForBlocksBeneath()\n      ) {\n        allowed = false\n      }\n    if (allowed) {\n      for (let i = 0; i < currentPieceCopy.length; i++) {\n        boardCopy[currentPieceCopy[i][0]][currentPieceCopy[i][1]] = 'e'\n      }\n      for (let i = 0; i < currentPieceCopy.length; i++) {\n        boardCopy[currentPieceCopy[i][0] + 1][currentPieceCopy[i][1]] = this.state.currentColor + 'm'\n      }\n      for (let i = 0; i < currentPieceCopy.length; i++) {\n        currentPieceCopy[i][0] = currentPieceCopy[i][0] + 1\n      }\n    }\n    this.setState({\n      previousBoards : this.trackBoard(boardCopy),\n      board: boardCopy,\n      currentPiece: currentPieceCopy\n    })\n  }\n\n  rotate = (rotation) => {\n    let boardCopy = this.state.board.map(row => row.slice());\n    let currentPieceCopy = this.state.currentPiece.map(piece => piece.slice());\n    let rotationCopy;\n\n    if (this.state.currentPieceName === 'O') {\n      //this piece does not rotate\n    } else if (this.state.currentPieceName === 'I') {\n      switch (rotation) {\n        case 1: (function () {\n          rotationCopy = 2;\n          currentPieceCopy[0][0] += -1;\n          currentPieceCopy[0][1] += 1;\n          currentPieceCopy[1][0] += 0;\n          currentPieceCopy[1][1] += 0;\n          currentPieceCopy[2][0] += 1;\n          currentPieceCopy[2][1] += -1;\n          currentPieceCopy[3][0] += 2;\n          currentPieceCopy[3][1] += -2;\n        })();\n          break;\n        case 2: (() => {\n          rotationCopy = 3;\n          currentPieceCopy[0][0] += 1;\n          currentPieceCopy[0][1] += 1;\n          currentPieceCopy[1][0] += 0;\n          currentPieceCopy[1][1] += 0;\n          currentPieceCopy[2][0] += -1;\n          currentPieceCopy[2][1] += -1;\n          currentPieceCopy[3][0] += -2;\n          currentPieceCopy[3][1] += -2;\n        })();\n          break;\n        case 3: (() => {\n          rotationCopy = 4;\n          currentPieceCopy[0][0] += 1;\n          currentPieceCopy[0][1] += -1;\n          currentPieceCopy[1][0] += 0;\n          currentPieceCopy[1][1] += 0;\n          currentPieceCopy[2][0] += -1;\n          currentPieceCopy[2][1] += 1;\n          currentPieceCopy[3][0] += -2;\n          currentPieceCopy[3][1] += 2;\n        })();\n          break;\n        case 4: (() => {\n          rotationCopy = 1;\n          currentPieceCopy[0][0] += -1;\n          currentPieceCopy[0][1] += -1;\n          currentPieceCopy[1][0] += 0;\n          currentPieceCopy[1][1] += 0;\n          currentPieceCopy[2][0] += 1;\n          currentPieceCopy[2][1] += 1;\n          currentPieceCopy[3][0] += 2;\n          currentPieceCopy[3][1] += 2;\n        })();\n          break;\n        default: console.log('there was a big problem');\n      }\n    } else if (this.state.currentPieceName === 'S') {\n      switch (rotation) {\n        case 1: (function () {\n          rotationCopy = 2;\n          currentPieceCopy[0][0] += 1;\n          currentPieceCopy[0][1] += 1;\n          currentPieceCopy[1][0] += 2;\n          currentPieceCopy[1][1] += 0;\n          currentPieceCopy[2][0] += -1;\n          currentPieceCopy[2][1] += 1;\n          currentPieceCopy[3][0] += 0;\n          currentPieceCopy[3][1] += 0;\n        })();\n          break;\n        case 2: (() => {\n          rotationCopy = 3;\n          currentPieceCopy[0][0] += 1;\n          currentPieceCopy[0][1] += -1;\n          currentPieceCopy[1][0] += 0;\n          currentPieceCopy[1][1] += -2;\n          currentPieceCopy[2][0] += 1;\n          currentPieceCopy[2][1] += 1;\n          currentPieceCopy[3][0] += 0;\n          currentPieceCopy[3][1] += 0;\n        })();\n          break;\n        case 3: (() => {\n          rotationCopy = 4;\n          currentPieceCopy[0][0] += -1;\n          currentPieceCopy[0][1] += -1;\n          currentPieceCopy[1][0] += -2;\n          currentPieceCopy[1][1] += 0;\n          currentPieceCopy[2][0] += 1;\n          currentPieceCopy[2][1] += -1;\n          currentPieceCopy[3][0] += 0;\n          currentPieceCopy[3][1] += 0;\n        })();\n          break;\n        case 4: (() => {\n          rotationCopy = 1;\n          currentPieceCopy[0][0] += -1;\n          currentPieceCopy[0][1] += 1;\n          currentPieceCopy[1][0] += 0;\n          currentPieceCopy[1][1] += 2;\n          currentPieceCopy[2][0] += -1;\n          currentPieceCopy[2][1] += -1;\n          currentPieceCopy[3][0] += 0;\n          currentPieceCopy[3][1] += 0;\n        })();\n          break;\n        default: console.log('there was a big problem');\n      }\n    } else if (this.state.currentPieceName === 'Z') {\n      switch (rotation) {\n        case 1: (function () {\n          rotationCopy = 2;\n          currentPieceCopy[0][0] += 0;\n          currentPieceCopy[0][1] += 2;\n          currentPieceCopy[1][0] += 1;\n          currentPieceCopy[1][1] += 1;\n          currentPieceCopy[2][0] += 0;\n          currentPieceCopy[2][1] += 0;\n          currentPieceCopy[3][0] += 1;\n          currentPieceCopy[3][1] += -1;\n        })();\n          break;\n        case 2: (() => {\n          rotationCopy = 3;\n          currentPieceCopy[0][0] += 2;\n          currentPieceCopy[0][1] += 0;\n          currentPieceCopy[1][0] += 1;\n          currentPieceCopy[1][1] += -1;\n          currentPieceCopy[2][0] += 0;\n          currentPieceCopy[2][1] += 0;\n          currentPieceCopy[3][0] += -1;\n          currentPieceCopy[3][1] += -1;\n        })();\n          break;\n        case 3: (() => {\n          rotationCopy = 4;\n          currentPieceCopy[0][0] += 0;\n          currentPieceCopy[0][1] += -2;\n          currentPieceCopy[1][0] += -1;\n          currentPieceCopy[1][1] += -1;\n          currentPieceCopy[2][0] += 0;\n          currentPieceCopy[2][1] += 0;\n          currentPieceCopy[3][0] += -1;\n          currentPieceCopy[3][1] += 1;\n        })();\n          break;\n        case 4: (() => {\n          rotationCopy = 1;\n          currentPieceCopy[0][0] += -2;\n          currentPieceCopy[0][1] += 0;\n          currentPieceCopy[1][0] += -1;\n          currentPieceCopy[1][1] += 1;\n          currentPieceCopy[2][0] += 0;\n          currentPieceCopy[2][1] += 0;\n          currentPieceCopy[3][0] += 1;\n          currentPieceCopy[3][1] += 1;\n        })();\n          break;\n        default: console.log('there was a big problem');\n      }\n    } else if (this.state.currentPieceName === 'L') {\n      switch (rotation) {\n        case 1: (function () {\n          rotationCopy = 2;\n          currentPieceCopy[0][0] += -1;\n          currentPieceCopy[0][1] += 1;\n          currentPieceCopy[1][0] += 0;\n          currentPieceCopy[1][1] += 0;\n          currentPieceCopy[2][0] += 1;\n          currentPieceCopy[2][1] += -1;\n          currentPieceCopy[3][0] += 2;\n          currentPieceCopy[3][1] += 0;\n        })();\n          break;\n        case 2: (() => {\n          rotationCopy = 3;\n          currentPieceCopy[0][0] += 1;\n          currentPieceCopy[0][1] += 1;\n          currentPieceCopy[1][0] += 0;\n          currentPieceCopy[1][1] += 0;\n          currentPieceCopy[2][0] += -1;\n          currentPieceCopy[2][1] += -1;\n          currentPieceCopy[3][0] += 0;\n          currentPieceCopy[3][1] += -2;\n        })();\n          break;\n        case 3: (() => {\n          rotationCopy = 4;\n          currentPieceCopy[0][0] += 1;\n          currentPieceCopy[0][1] += -1;\n          currentPieceCopy[1][0] += 0;\n          currentPieceCopy[1][1] += 0;\n          currentPieceCopy[2][0] += -1;\n          currentPieceCopy[2][1] += 1;\n          currentPieceCopy[3][0] += -2;\n          currentPieceCopy[3][1] += 0;\n        })();\n          break;\n        case 4: (() => {\n          rotationCopy = 1;\n          currentPieceCopy[0][0] += -1;\n          currentPieceCopy[0][1] += -1;\n          currentPieceCopy[1][0] += 0;\n          currentPieceCopy[1][1] += 0;\n          currentPieceCopy[2][0] += 1;\n          currentPieceCopy[2][1] += 1;\n          currentPieceCopy[3][0] += 0;\n          currentPieceCopy[3][1] += 2;\n        })();\n          break;\n        default: console.log('there was a big problem');\n      }\n    } else if (this.state.currentPieceName === 'J') {\n      switch (rotation) {\n        case 1: (function () {\n          rotationCopy = 2;\n          currentPieceCopy[0][0] += -1;\n          currentPieceCopy[0][1] += 1;\n          currentPieceCopy[1][0] += 0;\n          currentPieceCopy[1][1] += 0;\n          currentPieceCopy[2][0] += 1;\n          currentPieceCopy[2][1] += -1;\n          currentPieceCopy[3][0] += 0;\n          currentPieceCopy[3][1] += 2;\n        })();\n          break;\n        case 2: (() => {\n          rotationCopy = 3;\n          currentPieceCopy[0][0] += 1;\n          currentPieceCopy[0][1] += 1;\n          currentPieceCopy[1][0] += 0;\n          currentPieceCopy[1][1] += 0;\n          currentPieceCopy[2][0] += -1;\n          currentPieceCopy[2][1] += -1;\n          currentPieceCopy[3][0] += 2;\n          currentPieceCopy[3][1] += 0;\n        })();\n          break;\n        case 3: (() => {\n          rotationCopy = 4;\n          currentPieceCopy[0][0] += 1;\n          currentPieceCopy[0][1] += -1;\n          currentPieceCopy[1][0] += 0;\n          currentPieceCopy[1][1] += 0;\n          currentPieceCopy[2][0] += -1;\n          currentPieceCopy[2][1] += 1;\n          currentPieceCopy[3][0] += 0;\n          currentPieceCopy[3][1] += -2;\n        })();\n          break;\n        case 4: (() => {\n          rotationCopy = 1;\n          currentPieceCopy[0][0] += -1;\n          currentPieceCopy[0][1] += -1;\n          currentPieceCopy[1][0] += 0;\n          currentPieceCopy[1][1] += 0;\n          currentPieceCopy[2][0] += 1;\n          currentPieceCopy[2][1] += 1;\n          currentPieceCopy[3][0] += -2;\n          currentPieceCopy[3][1] += 0;\n        })();\n          break;\n        default: console.log('there was a big problem');\n      }\n\n    } else if (this.state.currentPieceName === 'T') {\n      switch (rotation) {\n        case 1: (function () {\n          rotationCopy = 2;\n          currentPieceCopy[0][0] += -1;\n          currentPieceCopy[0][1] += 1;\n          currentPieceCopy[1][0] += 0;\n          currentPieceCopy[1][1] += 0;\n          currentPieceCopy[2][0] += 1;\n          currentPieceCopy[2][1] += -1;\n          currentPieceCopy[3][0] += 1;\n          currentPieceCopy[3][1] += 1;\n        })();\n          break;\n        case 2: (() => {\n          rotationCopy = 3;\n          currentPieceCopy[0][0] += 1;\n          currentPieceCopy[0][1] += 1;\n          currentPieceCopy[1][0] += 0;\n          currentPieceCopy[1][1] += 0;\n          currentPieceCopy[2][0] += -1;\n          currentPieceCopy[2][1] += -1;\n          currentPieceCopy[3][0] += 1;\n          currentPieceCopy[3][1] += -1;\n        })();\n          break;\n        case 3: (() => {\n          rotationCopy = 4;\n          currentPieceCopy[0][0] += 1;\n          currentPieceCopy[0][1] += -1;\n          currentPieceCopy[1][0] += 0;\n          currentPieceCopy[1][1] += 0;\n          currentPieceCopy[2][0] += -1;\n          currentPieceCopy[2][1] += 1;\n          currentPieceCopy[3][0] += -1;\n          currentPieceCopy[3][1] += -1;\n        })();\n          break;\n        case 4: (() => {\n          rotationCopy = 1;\n          currentPieceCopy[0][0] += -1;\n          currentPieceCopy[0][1] += -1;\n          currentPieceCopy[1][0] += 0;\n          currentPieceCopy[1][1] += 0;\n          currentPieceCopy[2][0] += 1;\n          currentPieceCopy[2][1] += 1;\n          currentPieceCopy[3][0] += -1;\n          currentPieceCopy[3][1] += 1;\n        })();\n          break;\n        default: console.log('there was a big problem');\n      }\n    }\n\n\n    if (this.rotationAllowed(currentPieceCopy)) {\n      for (let i = 0; i < this.state.currentPiece.length; i++) {\n        boardCopy[this.state.currentPiece[i][0]][this.state.currentPiece[i][1]] = 'e'\n      }\n      for (let i = 0; i < currentPieceCopy.length; i++) {\n        boardCopy[currentPieceCopy[i][0]][currentPieceCopy[i][1]] = this.state.currentColor + 'm'\n      }\n      this.setState({\n        previousBoards : this.trackBoard(boardCopy),\n        board: boardCopy,\n        currentPiece: currentPieceCopy,\n        rotation: rotationCopy\n      })\n\n    }\n  }\n\n  rotationAllowed = (hypotheticalPiece) => {\n    let wontHitWalls = true;\n    let wontHitBlocks = true;\n\n    for (let i = 0; i < hypotheticalPiece.length; i++) {\n      if (hypotheticalPiece[i][0] < 0) {\n        wontHitWalls = false\n      } if (hypotheticalPiece[i][0] > 17) {\n        wontHitWalls = false\n      } if (hypotheticalPiece[i][1] < 0) {\n        wontHitWalls = false\n      } if (hypotheticalPiece[i][1] > 9) {\n        wontHitWalls = false\n      }\n    }\n\n    //this is an (inelegant) fix; will fail otherwise.\n    if (!wontHitWalls) {\n      return false\n    }\n\n    for (let i = 0; i < hypotheticalPiece.length; i++) {\n      if (this.state.board[hypotheticalPiece[i][0]][[hypotheticalPiece[i][1]]] !== 'e') {\n        if (this.state.board[hypotheticalPiece[i][0]][[hypotheticalPiece[i][1]]] !== this.state.currentColor + 'm') {\n          wontHitBlocks = false;\n        }\n      }\n    }\n    return (wontHitWalls && wontHitBlocks)\n  }\n\n  checkForFullRows = () => {\n    let fullRowArray = [];\n    for (let i = 0; i < this.state.board.length; i++) {\n      if (!this.state.board[i].includes('e')) {\n        fullRowArray.push(i)\n      }\n    }\n    if (fullRowArray.length > 0) {\n      this.setState({\n        score: this.state.score + fullRowArray.length,\n        gravitySpeed: this.state.gravitySpeed - (fullRowArray.length * 3)\n      })\n      this.colorFullRow(fullRowArray)\n    }\n  }\n  colorFullRow = (array) => {\n    let boardCopy = this.state.board.map(row => row.slice());\n    for (let i = 0; i < array.length; i++) {\n      for (let j = 0; j < 10; j++) {\n        boardCopy[array[i]][j] = 'e'\n      }\n    }\n    this.setState({ \n      previousBoards : this.trackBoard(boardCopy),\n      board: boardCopy \n    })\n    setTimeout(() => {\n      this.shiftBlocksDown(array);\n    }, 400)\n  }\n  shiftBlocksDown = (array) => {\n    let boardCopy = this.state.board.map(row => row.slice());\n    // array is an array of in indices of full rows.\n    //begginning with the row above the lowest full row, shift the values of each row down one. If there are multiple full rows, repeat.\n    for (let i = 0; i < array.length; i++) {\n      for (let j = array[i]; j > -1; j--) {\n        if (j === 0) {\n          boardCopy[j] = ['e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e']\n        } else {\n          // old: boardCopy[j] = boardCopy[j - 1]\n          for (let k = 0; k < 10; k++) {\n            if (!boardCopy[j - 1][k].includes('m') && !boardCopy[j][k].includes('m')) {\n              boardCopy[j][k] = boardCopy[j - 1][k]\n            }\n          }\n        }\n      }\n    }\n    this.setState({\n      previousBoards : this.trackBoard(boardCopy), \n      board: boardCopy \n    })\n  }\n  submitCheck = ()=>{\n    fetch('/states', {\n      method: \"GET\",\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    })\n    .then((response) => {return response.json()})\n    .then((json) => {this.setState({savedStates : json})})\n    .then(() => {\n        if (this.isHighestScore()){\n          this.submit();\n        } else if (this.isHighScore()){\n          this.trimAndSubmit();\n        } else {\n          this.scoreState();\n      }\n    })\n  }\n    isHighestScore = () =>{\n      if (this.state.score >= this.state.savedStates[0].score){\n        return true;\n      } else {\n        return false;\n      }\n    }\n    isHighScore = () =>{\n      let highScore = false;\n      for (let i = 0; i < 5; i++){\n        if (this.state.score >= this.state.savedStates[i].score){\n          highScore = true;\n        }\n      }\n      return highScore;\n    }\n    trimAndSubmit = () => {\n      this.setState({\n        previousBoards : 'deleted'\n      }, ()=>{\n        this.submit();\n        this.scoreState();\n      })\n    }\n\n  submit = () => {\n    if(this.state.name !== ''){\n    fetch('/', {\n      method: \"POST\",\n      body: JSON.stringify(this.state),\n      headers: {\n        // 'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n    })\n    .then(response => {\n      response.json().then(data => {\n      })\n    })\n    .then(()=>{\n      this.getScores();\n      this.scoreState();\n    })\n  }\n}\nscoreState = () =>{\n  this.setState({\n    showScores : true\n  })\n}\ngetScores = () => {\n  fetch('/states', {\n    method: \"GET\",\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    }\n  })\n  .then((response) => {return response.json()})\n  .then((json) => {this.setState({savedStates : json})})\n  \n  // console.log('843 STATE: ' + this.state)\n  this.controlTimeWarp('start')\n}\n\n  handleChange = (e) => {\n    this.setState({ name: e.target.value })\n  }\n\n  trackBoard = (boardCopy) => {\n    let previousBoardsCopy = this.state.previousBoards.map(row => row.slice())\n    previousBoardsCopy.push(boardCopy)\n    return previousBoardsCopy\n  }\n  moveTimeWarpIndex = () => {\n      let plusOne = this.state.timeWarpIndex + 1\n      if (plusOne === this.state.previousBoards.length){\n        this.setState({timeWarpIndex : 0})\n      } else {\n      this.setState({timeWarpIndex: plusOne})\n      }\n  }\n  controlTimeWarp = (command) => {\n    // console.log('867 STATE: ' + this.state)\n    let interval;\n    if(command === 'start'){\n      interval = setInterval(this.moveTimeWarpIndex, 250)\n    } else if (command === 'stop') {\n      clearInterval(interval);\n    }\n  }\n\n  render() {\n    \n    return (\n      <div>\n        <ScoreBoard \n          showScores={this.state.showScores} \n          savedStates = {this.state.savedStates}\n          index = {this.state.timeWarpIndex}\n          // previousBoards = {this.state.previousBoards}\n          />\n        <GameOver \n          id=\"gameOver\" \n          showScores={this.state.showScores} \n          score={this.state.score} \n          gameOver={this.state.gameOver} />\n        <Form \n          gameOver={this.state.gameOver} \n          showScores={this.state.showScores} \n          handleClick={this.submitCheck} \n          nameValue={this.state.name} \n          handleChange={this.handleChange} />\n        <Display\n          state={this.state}\n          makeRow={this.makeRow}\n          stop={this.stop}\n          start={this.start}\n          endGame={this.submitCheck}\n          />\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}